local Game = game
local Enum = Enum
local Tick = tick

local Config_Visuals;
local GetDescendants = Game.GetDescendants
local GetService = Game.GetService
local Destroy = Game.Destroy
local FindFirstChild = Game.FindFirstChild
local IsA = Game.IsA
local Sound

local GetCustomAsset = getcustomasset
local Decode = crypt.base64.decode
local SetMetaTable = setmetatable
local SetClipBoard = setclipboard

local IsFile = isfile
local ListFiles = listfiles
local ReadFile = readfile
local WriteFile = writefile
local LoadFile = loadfile
local DelFile = delfile

local IsFolder = isfolder
local MakeFolder = makefolder

local NewVector2 = Vector2.new
local NewInstance = Instance.new
local NewUDim2 = UDim2.new
local NewUDim = UDim.new

local NewRGB = Color3.fromRGB
local FromHSV = Color3.fromHSV
local ToHSV = NewRGB().ToHSV

local EmptyUDim2 = NewUDim2(0, 0, 0, 0)
local EmptyUDim = NewUDim(0, 0)
local EmptyFunction = function() end

local NewColorSequence = ColorSequence.new
local NewNumberSequence = NumberSequence.new
local NewNumberKeypoint = NumberSequenceKeypoint.new

local NewTweenInfo = TweenInfo.new
local NewFont = Font.new

local Format = string.format
local Lower = string.lower
local Gsub = string.gsub
local StringFind = string.find
local Match = string.match

local Remove = table.remove
local Concat = table.concat
local Unpack = table.unpack
local Clear = table.clear
local Find = table.find

local Round = math.round
local Clamp = math.clamp

local Cancel = task.cancel
local Spawn = task.spawn
local Delay = task.delay
local Wait = task.wait

local Wrap = coroutine.wrap

local Sin = math.sin
local Random_1 = math.random

local Date = os.date


-- Services
local Debris = game:GetService("Debris")
local SoundService = cloneref(game:GetService("SoundService"))
local VirtualInputManager = cloneref(GetService(Game, "VirtualInputManager"))
local TextService = cloneref(GetService(Game, "TextService"))
local UserInputService = cloneref(GetService(Game, "UserInputService"))
local TweenService = cloneref(GetService(Game, "TweenService"))
local HttpService = cloneref(GetService(Game, "HttpService"))
local RunService = cloneref(GetService(Game, "RunService"))
local Lighting = cloneref(GetService(Game, "Lighting"))
local Players = cloneref(GetService(Game, "Players"))
local StarterGui = cloneref(GetService(Game, "StarterGui"))
local CoreGui = cloneref(GetService(Game, "CoreGui"))
local Workspace = cloneref(GetService(Game, "Workspace"))
local ReplicatedStorage = cloneref(GetService(Game, "ReplicatedStorage"))
local VirtualUser = cloneref(GetService(game, "VirtualUser"))

local JSONDecode = HttpService.JSONDecode
local JSONEncode = HttpService.JSONEncode


-- Variables
local CurrentCamera = Workspace.CurrentCamera
local ScreenSize = CurrentCamera.ViewportSize
local RenderStepped = RunService.RenderStepped
local LocalPlayer = Players.LocalPlayer
local Mouse = LocalPlayer:GetMouse()


-- Tables
local Menu = {}


-- Menu Library
do
    Menu.BasePath = "harvox"

    Menu = {
        BasePath = "harvox",
        CurrentZIndex = 0,
        Clear = true,

        CurrentContent = {},
        Keybinds = {},

        Folders = {
            Fonts = Format("%s/Fonts", Menu.BasePath),
            Images = Format("%s/Images", Menu.BasePath),
            Configs = Format("%s/Configs", Menu.BasePath),
            Luas = Format("%s/Luas", Menu.BasePath)
        },

        EncodedAssets = {
            ["Minecraftia"] = "AAEAAAANAIAAAwBQRFNJRwAAAAEAAQX0AAAACEdERUYDBAAkAAEF/AAAAChPUy8y1NZFSAAAANwAAABgY21hcNZo3swAAQp8AAAIOGdhc3AAAAADAAEF7AAAAAhnbHlmEGqBuwAAGjgAANTQaGVhZAZHGCYAAPpgAAAANmhoZWERQQ7WAAAZ9AAAACRobXR4Ywj7gAAA+pgAAAtUbG9jYQEl1TwAAO8IAAALWG1heHAC4wA8AAAaGAAAACBuYW1lomnC7QABBiQAAARWcG9zdN5ON9IAAAE8AAAYuAADBGEBkAAFAAQDAAMAAAABgAMAAwAAAAMAAEwBMgAAAAAEAAAAAAAAAKAAAL9AAGB7AAAAAAAAAABGU1RSAEAAIPsCCQADAAAACoD9wAAAAf8AAAAAB4AJAAAAACAAAQACAAAAAAAAAJgATAAAAAAAAAAAAAAAAAAAAAAAAAAAAtUAAAABAAIAAwAEAAUABgAHAAgACQAKAAsADAANAA4ADwAQABEAEgATABQAFQAWABcAGAAZABoAGwAcAB0AHgAfACAAIQAiACMAJAAlACYAJwAoACkAKgArACwALQAuAC8AMAAxADIAMwA0ADUANgA3ADgAOQA6ADsAPAA9AD4APwBAAEEAQgBDAEQARQBGAEcASABJAEoASwBMAE0ATgBPAFAAUQBSAFMAVABVAFYAVwBYAFkAWgBbAFwAXQBeAF8AYABhAKMAhACFAL0AlgDoAIYAjgCLAJ0AqQCkAIoA2gCDAJMA8gDzAI0AlwCIAMMA3gDxAJ4AqgD1APQA9gCiAK0AyQDHAK4AYgBjAJAAZADLAGUAyADKAM8AzADNAM4A6QBmANMA0ADRAK8AZwDwAJEA1gDUANUAaADrAO0AiQBqAGkAawBtAGwAbgCgAG8AcQBwAHIAcwB1AHQAdgB3AOoAeAB6AHkAewB9AHwAuAChAH8AfgCAAIEA7ADuALoBAgEDAQQBBQEGAQcA/QD+AQgBCQEKAQsA/wEAAQwBDQEOAQEBDwEQAREBEgETARQBFQEWARcBGAEZARoA+AD5ARsBHAEdAR4BHwEgASEBIgEjASQBJQEmAScBKAEpASoA+gDXASsBLAEtAS4BLwEwATEBMgEzATQBNQE2ATcBOAE5AOIA4wE6ATsBPAE9AT4BPwFAAUEBQgFDAUQBRQFGAUcBSACwALEBSQFKAUsBTAFNAU4BTwFQAVEBUgD7APwA5ADlAVMBVAFVAVYBVwFYAVkBWgFbAVwBXQFeAV8BYAFhAWIBYwFkAWUBZgFnAWgAuwFpAWoBawFsAOYA5wFtAW4BbwFwAKYBcQFyAXMBdAF1AXYBdwF4AXkBegF7AXwBfQF+AX8BgAGBAYIBgwGEAYUBhgGHAYgBiQGKANgA4QGLAYwBjQDbANwA3QDgANkA3wGOAY8BkAGRAZIBkwGUAZUBlgGXAZgBmQGaAZsBnAGdAZ4BnwGgAaEBogGjAaQBpQGmAacBqAGpAaoBqwGsAa0BrgGvAbABsQGyAJ8BswG0AbUBtgG3AbgBuQG6AbsBvAG9Ab4BvwHAAcEBwgHDAcQBxQHGAccByACbAckBygHLAcwBzQHOAc8B0AHRAdIB0wHUAdUB1gHXAdgB2QHaAdsB3AHdAd4B3wHgAeEB4gHjAeQB5QHmAecB6AHpAeoB6wHsAe0B7gHvAfAB8QHyAfMB9AH1AfYB9wH4AfkB+gH7AfwB/QH+Af8CAAIBAgICAwIEAgUCBgIHAggCCQIKAgsCDAINAg4CDwIQAhECEgITAhQCFQIWAhcCGAIZAhoCGwIcAh0CHgIfAiACIQIiAiMCJAIlAiYCJwIoAikCKgIrAiwCLQIuAi8CMAIxAjICMwI0AjUCNgI3AjgCOQI6AjsCPAI9Aj4CPwJAAkECQgJDAkQCRQJGAkcCSAJJAkoCSwJMAk0CTgJPAlACUQJSAlMCVAJVAlYCVwJYAlkCWgJbAlwCXQJeAl8CYAJhAmICYwJkAmUCZgJnAmgCaQJqAmsCbAJtAm4CbwJwAnECcgJzAnQCdQJ2AncCeAJ5AnoCewJ8An0CfgJ/AoACgQKCAoMChAKFAoYChwKIAokCigC2ALcAxAKLALQAtQDFAowAggDCAIcCjQCrAMYCjgKPApACkQC+AL8AvAKSApMClAKVApYClwKYApkCmgKbApwCnQKeAp8CoAKhAqICowKkAqUCpgKnAqgCqQKqAqsCrAKtAq4CrwKwAIwCsQKyArMCtAK1ArYCtwK4ArkCugK7ArwCvQK+Ar8CwALBAsICwwLEAsUCxgLHAsgCyQLKAssAqAClAJIAnALMAKcAjwCUAJUCzQLOAs8C0ALRAtIC0wLUAtUC1gLXAtgC2QLaAtsC3ALdAt4AwADBB0FtYWNyb24HYW1hY3JvbgZBYnJldmUGYWJyZXZlB0FvZ29uZWsHYW9nb25lawtDY2lyY3VtZmxleAtjY2lyY3VtZmxleARDZG90BGNkb3QGRGNhcm9uBmRjYXJvbgZEY3JvYXQHRW1hY3JvbgdlbWFjcm9uBkVicmV2ZQZlYnJldmUERWRvdARlZG90B0VvZ29uZWsHZW9nb25lawZFY2Fyb24GZWNhcm9uC0djaXJjdW1mbGV4C2djaXJjdW1mbGV4BEdkb3QEZ2RvdAhHY2VkaWxsYQhnY2VkaWxsYQtIY2lyY3VtZmxleAtoY2lyY3VtZmxleARIYmFyBGhiYXIGSXRpbGRlBml0aWxkZQdJbWFjcm9uB2ltYWNyb24GSWJyZXZlBmlicmV2ZQdJb2dvbmVrB2lvZ29uZWsCSUoCaWoLSmNpcmN1bWZsZXgLamNpcmN1bWZsZXgIS2NlZGlsbGEIa2NlZGlsbGEMa2dyZWVubGFuZGljBkxhY3V0ZQZsYWN1dGUITGNlZGlsbGEIbGNlZGlsbGEGTGNhcm9uBmxjYXJvbgRMZG90BGxkb3QGTmFjdXRlBm5hY3V0ZQhOY2VkaWxsYQhuY2VkaWxsYQZOY2Fyb24GbmNhcm9uC25hcG9zdHJvcGhlA0VuZwNlbmcHT21hY3JvbgdvbWFjcm9uBk9icmV2ZQZvYnJldmUJT2RibGFjdXRlCW9kYmxhY3V0ZQZSYWN1dGUGcmFjdXRlCFJjZWRpbGxhCHJjZWRpbGxhBlJjYXJvbgZyY2Fyb24GU2FjdXRlBnNhY3V0ZQtTY2lyY3VtZmxleAtzY2lyY3VtZmxleAhUY2VkaWxsYQh0Y2VkaWxsYQZUY2Fyb24GdGNhcm9uBFRiYXIEdGJhcgZVdGlsZGUGdXRpbGRlB1VtYWNyb24HdW1hY3JvbgZVYnJldmUGdWJyZXZlBVVyaW5nBXVyaW5nCVVkYmxhY3V0ZQl1ZGJsYWN1dGUHVW9nb25lawd1b2dvbmVrC1djaXJjdW1mbGV4C3djaXJjdW1mbGV4C1ljaXJjdW1mbGV4C3ljaXJjdW1mbGV4BlphY3V0ZQZ6YWN1dGUEWmRvdAR6ZG90BWxvbmdzB0J0b3BiYXIHYnRvcGJhcgVTY2h3YQdac3Ryb2tlB3pzdHJva2UDRXpoB0dzdHJva2UHZ3N0cm9rZQZHY2Fyb24GZ2Nhcm9uBktjYXJvbgZrY2Fyb24HT29nb25lawdvb2dvbmVrCEV6aGNhcm9uCGV6aGNhcm9uCkFyaW5nYWN1dGUKYXJpbmdhY3V0ZQdBRWFjdXRlB2FlYWN1dGULT3NsYXNoYWN1dGULb3NsYXNoYWN1dGUMU2NvbW1hYWNjZW50DHNjb21tYWFjY2VudAtUY29tbWFiZWxvdwt0Y29tbWFiZWxvdwhkb3RsZXNzagVzY2h3YQNlemgQZmlyc3R0b25lY2hpbmVzZRFzZWNvbmR0b25lY2hpbmVzZRFmb3VydGh0b25lY2hpbmVzZRBudW1lcmFsc2lnbmdyZWVrFW51bWVyYWxzaWdubG93ZXJncmVlaw1xdWVzdGlvbmdyZWVrBXRvbm9zDmRpYWx5dGlrYXRvbm9zCkFscGhhdG9ub3MJYW5vdGVsZWlhDEVwc2lsb250b25vcwhFdGF0b25vcwlJb3RhdG9ub3MMT21pY3JvbnRvbm9zDFVwc2lsb250b25vcwpPbWVnYXRvbm9zEWlvdGFkaWVyZXNpc3Rvbm9zBUFscGhhBEJldGEFR2FtbWEKRGVsdGFncmVlawdFcHNpbG9uBFpldGEDRXRhBVRoZXRhBElvdGEFS2FwcGEGTGFtYmRhAk11Ak51AlhpB09taWNyb24CUGkDUmhvBVNpZ21hA1RhdQdVcHNpbG9uA1BoaQNDaGkDUHNpDElvdGFkaWVyZXNpcw9VcHNpbG9uZGllcmVzaXMKYWxwaGF0b25vcwxlcHNpbG9udG9ub3MIZXRhdG9ub3MJaW90YXRvbm9zFHVwc2lsb25kaWVyZXNpc3Rvbm9zBWFscGhhBGJldGEFZ2FtbWEFZGVsdGEHZXBzaWxvbgR6ZXRhA2V0YQV0aGV0YQRpb3RhBWthcHBhBmxhbWJkYQdtdWdyZWVrAm51AnhpB29taWNyb24DcmhvBnNpZ21hMQVzaWdtYQN0YXUHdXBzaWxvbgNwaGkDY2hpA3BzaQVvbWVnYQxpb3RhZGllcmVzaXMPdXBzaWxvbmRpZXJlc2lzDG9taWNyb250b25vcwx1cHNpbG9udG9ub3MKb21lZ2F0b25vcwd1bmkwM0Q3B3VuaTA0MDAJYWZpaTEwMDIzCWFmaWkxMDA1MQlhZmlpMTAwNTIJYWZpaTEwMDUzCWFmaWkxMDA1NAlhZmlpMTAwNTUJYWZpaTEwMDU2CWFmaWkxMDA1NwlhZmlpMTAwNTgJYWZpaTEwMDU5CWFmaWkxMDA2MAlhZmlpMTAwNjEHdW5pMDQwRAlhZmlpMTAwNjIJYWZpaTEwMTQ1CUFjeXJpbGxpYwlhZmlpMTAwMTgJYWZpaTEwMDE5CWFmaWkxMDAyMAlhZmlpMTAwMjEJYWZpaTEwMDIyCWFmaWkxMDAyNAlhZmlpMTAwMjUJYWZpaTEwMDI2CWFmaWkxMDAyNwlhZmlpMTAwMjgJYWZpaTEwMDI5CWFmaWkxMDAzMAlhZmlpMTAwMzEJYWZpaTEwMDMyCWFmaWkxMDAzMwlhZmlpMTAwMzQJYWZpaTEwMDM1CWFmaWkxMDAzNglhZmlpMTAwMzcJYWZpaTEwMDM4CWFmaWkxMDAzOQlhZmlpMTAwNDAJYWZpaTEwMDQxCWFmaWkxMDA0MglhZmlpMTAwNDMJYWZpaTEwMDQ0CWFmaWkxMDA0NQlhZmlpMTAwNDYJYWZpaTEwMDQ3CWFmaWkxMDA0OAlhZmlpMTAwNDkJYWN5cmlsbGljCWFmaWkxMDA2NglhZmlpMTAwNjcJYWZpaTEwMDY4CWFmaWkxMDA2OQlhZmlpMTAwNzAJYWZpaTEwMDcyCWFmaWkxMDA3MwlhZmlpMTAwNzQJYWZpaTEwMDc1CWFmaWkxMDA3NglhZmlpMTAwNzcJYWZpaTEwMDc4CWFmaWkxMDA3OQlhZmlpMTAwODAJYWZpaTEwMDgxCWFmaWkxMDA4MglhZmlpMTAwODMJYWZpaTEwMDg0CWFmaWkxMDA4NQlhZmlpMTAwODYJYWZpaTEwMDg3CWFmaWkxMDA4OAlhZmlpMTAwODkJYWZpaTEwMDkwCWFmaWkxMDA5MQlhZmlpMTAwOTIJYWZpaTEwMDkzCWFmaWkxMDA5NAlhZmlpMTAwOTUJYWZpaTEwMDk2CWFmaWkxMDA5Nwd1bmkwNDUwCWFmaWkxMDA3MQlhZmlpMTAwOTkJYWZpaTEwMTAwCWFmaWkxMDEwMQlhZmlpMTAxMDIJYWZpaTEwMTAzCWFmaWkxMDEwNAlhZmlpMTAxMDUJYWZpaTEwMTA2CWFmaWkxMDEwNwlhZmlpMTAxMDgJYWZpaTEwMTA5B3VuaTA0NUQJYWZpaTEwMTEwCWFmaWkxMDE5MwlhZmlpMTAxNDYJYWZpaTEwMTk0CWFmaWkxMDE0NwlhZmlpMTAxOTUJYWZpaTEwMTQ4CWFmaWkxMDE5Ngd1bmkwNDhBB3VuaTA0OEIHdW5pMDQ4Qwd1bmkwNDhEB3VuaTA0OEUHdW5pMDQ4RglhZmlpMTAwNTAJYWZpaTEwMDk4EUdoZXN0cm9rZWN5cmlsbGljEWdoZXN0cm9rZWN5cmlsbGljFFpoZWRlc2NlbmRlcmN5cmlsbGljFHpoZWRlc2NlbmRlcmN5cmlsbGljE1plZGVzY2VuZGVyY3lyaWxsaWMTemVkZXNjZW5kZXJjeXJpbGxpYxNLYWRlc2NlbmRlcmN5cmlsbGljE2thZGVzY2VuZGVyY3lyaWxsaWMYS2F2ZXJ0aWNhbHN0cm9rZWN5cmlsbGljGGthdmVydGljYWxzdHJva2VjeXJpbGxpYxFLYWJhc2hraXJjeXJpbGxpYxFrYWJhc2hraXJjeXJpbGxpYxNFbmRlc2NlbmRlcmN5cmlsbGljE2VuZGVzY2VuZGVyY3lyaWxsaWMTRXNkZXNjZW5kZXJjeXJpbGxpYxNlc2Rlc2NlbmRlcmN5cmlsbGljEVVzdHJhaWdodGN5cmlsbGljEXVzdHJhaWdodGN5cmlsbGljF1VzdHJhaWdodHN0cm9rZWN5cmlsbGljF3VzdHJhaWdodHN0cm9rZWN5cmlsbGljE0hhZGVzY2VuZGVyY3lyaWxsaWMTaGFkZXNjZW5kZXJjeXJpbGxpYxRDaGVkZXNjZW5kZXJjeXJpbGxpYxRjaGVkZXNjZW5kZXJjeXJpbGxpYxlDaGV2ZXJ0aWNhbHN0cm9rZWN5cmlsbGljGWNoZXZlcnRpY2Fsc3Ryb2tlY3lyaWxsaWMMU2hoYWN5cmlsbGljDHNoaGFjeXJpbGxpYxBwYWxvY2hrYWN5cmlsbGljEFpoZWJyZXZlY3lyaWxsaWMQemhlYnJldmVjeXJpbGxpYwd1bmkwNEM1B3VuaTA0QzYORW5ob29rY3lyaWxsaWMOZW5ob29rY3lyaWxsaWMHdW5pMDRDOQd1bmkwNENBB3VuaTA0Q0QHdW5pMDRDRQd1bmkwNENGEUFkaWVyZXNpc2N5cmlsbGljEWFkaWVyZXNpc2N5cmlsbGljC0FpZWN5cmlsbGljC2FpZWN5cmlsbGljDVNjaHdhY3lyaWxsaWMJYWZpaTEwODQ2D0ltYWNyb25jeXJpbGxpYw9pbWFjcm9uY3lyaWxsaWMRSWRpZXJlc2lzY3lyaWxsaWMRaWRpZXJlc2lzY3lyaWxsaWMRT2RpZXJlc2lzY3lyaWxsaWMRb2RpZXJlc2lzY3lyaWxsaWMPT2JhcnJlZGN5cmlsbGljD29iYXJyZWRjeXJpbGxpYwd1bmkwNEVDB3VuaTA0RUQPVW1hY3JvbmN5cmlsbGljD3VtYWNyb25jeXJpbGxpYxFVZGllcmVzaXNjeXJpbGxpYxF1ZGllcmVzaXNjeXJpbGxpYwZXZ3JhdmUGd2dyYXZlBldhY3V0ZQZ3YWN1dGUJV2RpZXJlc2lzCXdkaWVyZXNpcwd1bmkxRTlFBllncmF2ZQZ5Z3JhdmURcXVvdGVsZWZ0cmV2ZXJzZWQHdW5pMjAxRgd1bmkyMDIzBm1pbnV0ZQZzZWNvbmQNcHJpbWVyZXZlcnNlZAd1bmkyMDM2DHplcm9zdXBlcmlvcgd1bmkyMDcxDGZvdXJzdXBlcmlvcgxmaXZlc3VwZXJpb3ILc2l4c3VwZXJpb3INc2V2ZW5zdXBlcmlvcg1laWdodHN1cGVyaW9yDG5pbmVzdXBlcmlvcgx6ZXJvaW5mZXJpb3ILb25laW5mZXJpb3ILdHdvaW5mZXJpb3INdGhyZWVpbmZlcmlvcgxmb3VyaW5mZXJpb3IMZml2ZWluZmVyaW9yC3NpeGluZmVyaW9yDXNldmVuaW5mZXJpb3INZWlnaHRpbmZlcmlvcgxuaW5laW5mZXJpb3IDd29uBEV1cm8HdW5pMjBBRQd1bmkyMEIxB3VuaTIwQjQHdW5pMjBCOAd1bmkyMEI5B3VuaTIwQkEJYWZpaTYxMjQ4CWFmaWk2MTI4OQlhZmlpNjEzNTIHdW5pMjExNwd1bmkyMTIwCWVzdGltYXRlZAd1bmkyMTUwB3VuaTIxNTEHdW5pMjE1MghvbmV0aGlyZAl0d290aGlyZHMHdW5pMjE1NQd1bmkyMTU2B3VuaTIxNTcHdW5pMjE1OAd1bmkyMTU5B3VuaTIxNUEJb25lZWlnaHRoDHRocmVlZWlnaHRocwtmaXZlZWlnaHRocwxzZXZlbmVpZ2h0aHMJYXJyb3dsZWZ0B2Fycm93dXAKYXJyb3dyaWdodAlhcnJv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wMDAwMABgP6AwAGA/oDAwMDAwMDAwAAAAAQAAAPAA8AJwAADAAkADQARAAARETMRFTUhETMRATUzFSU1MxXAAkDA/cDA/oDABIADAP0AwMADAPxABIDAwMDAwAAABAAAA8ADwAnAAAMACQANABEAABERMxEVNSERMxEBNTMVNTUzFcACQMD9wMDABIADAP0AwMADAPxABIDAwMDAwAAAAAAFAAADwAPACcAAAwAJAA0AEQAVAAARETMRFTUhETMRATUzFTM1MxUlNTMVwAJAwP0AwMDA/oDABIADAP0AwMADAPxABIDAwMDAwMDAAAAAAAQAAAPAA8AJAAADAAkADQARAAARETMRFTUhETMRATUzFTM1MxXAAkDA/QDAwMAEgAMA/QDAwAMA/EAEgMDAwMAAAAAABQAAAwADwAnAAAMABwAPABMAFwAAETUhFQERMxEBNSE1IREzEQE1MxU1NTMVAwD9AMACQP3AAkDA/cDAwAMAwMACQAJA/cD+gMDAAkD8QASAwMDAwMAAAAMAAAMAA8AJAAADAAcAEwAAAREzEQE1IRUBETMRMxUjFSEVIREDAMD9wAGA/QDAwMACQP3ABUABgP6AAYDAwPxABgD9wMDAwP6AAAADAAADAAPAB4AAAwAHAA8AABE1IRUBETMRATUhNSERMxEDAP0AwAJA/cACQMADAMDAAkACQP3A/oDAwAJA/EAAAwAAA8ADwAqAAAsADwATAAARETMVITUzESMRIRERNSEVATUhFcACQMDA/cACQP3AAkADwASAwMD7gAMA/QAEgMDAAYDAwAAABAAAA8ADwAkAAAMADQARABUAABE1MxUVNSE1ITUhNTMRATUhFQE1IRXAAkD9wAJAwP0AAkD9wAJABIDAwMDAwMDA/QADAMDAAYDAwAAAAAACAAADwAPACoAACwATAAARETMVITUzESMRIRERETMVMzUzEcACQMDA/cDAwMADwASAwMD7gAMA/QAEgAJAwMD9wAAAAAQAAAPAA8AJwAADAA0AEQAZAAARNTMVFTUhNSE1ITUzEQE1IRUBETMVMzUzEcACQP3AAkDA/QACQP3AwMDABIDAwMDAwMDA/QADAMDAAYABgMDA/oAAAAADAAACQAPACQAABQARABUAAAERMxUzFQERMxUhNTMRIxEhERE1IRUCQMDA/EDAAkDAwP3AAkAC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AAAAAAADAAADAAPAB4AABwALAA8AABERMxEhFSERAREzEQE1IRXAAkD9wAJAwP0AAkADAAPA/oDA/oACQAGA/oABgMDAAAAAAAQAAAMAA8AHgAADAAcACwAPAAABETMRATUhFSURMxERNSEVAwDA/QACQP0AwAMAAwABgP6AAYDAwMABgP6AAYDAwAAAAwAAA8ADwAeAAAMABwAPAAATNSEVJREzESERITUhFSMRwAGA/cDAAYD+gAMAwAPAwMDAAkD9wAJAwMD9wAAAAAEAAAPAA8AHgAAHAAABESE1IRUhEQGA/oADwP6AA8ADAMDA/QAAAAADAAADwAPAB4AAAwAHAAsAABM1IRUlETMRIREzEcACQP0AwAJAwAPAwMDAAwD9AAMA/QAAAwAAAwADwAeAAAMABwAVAAABETMRIREzERMRIzUzESEVIxEzFSMRAwDA/EDAwMDAAYDAwMAFQAGA/oACQP3A/cABgMACQMD+gMD+gAAAAAAJAAADAAPAB4AAAwAHAAsADwATABcAGwAfACMAABERMxEhETMRATUzFTM1MxUlNTMVJTUzFTM1MxUlNTMVITUzFcACQMD9AMDAwP6AwP6AwMDA/QDAAkDAAwABgP6AAYD+gAGAwMDAwMDAwMDAwMDAwMDAwMAAAAADAAADAAPAB4AAAwAPABMAABERMxETESM1MxEzETMVIxETETMRwMDAwMDAwMDABUACQP3A/cABgMACQP3AwP6AAkACQP3AAAAFAAADwAPAB4AAAwAHAAsADwATAAATNTMVMzUzFSURMxEhETMRIREzEcDAwMD+gMD9wMACQMADwMDAwMDAAYD+gAMA/QADAP0AAAAAAwAAA8ACQAkAAAMABwALAAATETMRATUzFTM1MxXAwP6AwMDAA8ADwPxABIDAwMDAAAAAAAUAAAPAA8AJAAADAAcACwAPABMAABM1IRUlETMRIREzEQE1MxUzNTMVwAJA/QDAAkDA/QDAwMADwMDAwAMA/QADAP0AA8DAwMDAAAAEAAADwAPAB4AAAwAHAAsADwAAEzUhFSURMxEhETMRATUhFcACQP0AwAJAwP0AAkADwMDAwAJA/cACQP3AAkDAwAAAAAQAAAPAA8AJwAADAAcACwAPAAATNSEVJREzESERMxEBETMRwAJA/QDAAkDA/cDAA8DAwMADAP0AAwD9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AADDrAAAxEAAAMTIAADFYAAAxggAAMacAADHOAAAx9gAAMhwAADIyAAAySAAAMl4AADJ1AAAyjwAAMqoAADLDAAAy2QAAMvIAADMJAAAzMwAAM0YAADNdAAAzdwAAM4MAADOPAAAzqgAAM7sAADPRAAAz5wAAM+4AADP4AAA0AwAANBUAADQhAAA0NQAANFIAADRhAAA0eQAANI0AADSYAAA0pwAANLoAADTLAAA03AAANPMAADUBAAA1DwAANSEAADU0AABAAAAAgAANpQQ/l8PPPUACwYAAAAAANA0HEwAAAAA0DOsHP6AAkAIQAqAAAAACAACAAEAAAAAAYAAAAAAAAABgAAAAYAAAAGAAAADAAAABIAAAASAAAAEgAAABIAAAAGAAAADwAAAA8AAAAPAAAAEgAAAAYAAAASAAAABgAAABIAAAASAAAAEgAAABIAAAASAAAAEgAAABIAAAASAAAAEgAAABIAAAASAAAABgAAAAYAAAAPAAAAEgAAAA8AAAASAAAAFQAAABIAAAASAAAAEgAAABIAAAASAAAAEgAAABIAAAASAAAADAAAABIAAAASAAAAEgAAABIAAAASAAAAEgAAABIAAAASAAAAEgAAABIAAAASAAAAEgAAABIAAAASAAAAEgAAABIAAAASAAAADAAAABIAAAAMAAAAEgAAABIAAAAJAAAAEgAAABIAAAASAAAAEgAAABIAAAAPAAAAEgAAABIAAAAGAAAAEgAAAA8AAAAJAAAAEgAAABIAAAASAAAAEgAAABIAAAASAAAAEgAAAAwAAAASAAAAEgAAABIAAAASAAAAEgAAABIAAAAPAAAABgAAAA8AAAAVAAAABgAAAA8AAAASAAAAEgAAABIAAAAGAAAAEgAAAA8AAwAYAAAADAAAAA8AAAAPAAAAGAAAABIAAAAMAAAAEgAAAAwAAAAMAAAACQAAABIAAAASAAAABgAAAAwAAwAMAAAADAAAAA8AAAAbAAAAGwAAABsAAAASAAAAEgAAABIAAAASAAAAEgAAABIAAAASAAAAHgAAABIAAAASAAAAEgAAABIAAAASAAAADAAAAAwAAAAMAAAADAAAABUAAAASAAAAEgAAABIAAAASAAAAEgAAABIAAAAPAAAAEgAAABIAAAASAAAAEgAAABIAAAASAAAAEgAAABIAAAASAAAAEgAAABIAAAASAAAAEgAAABIAAAAeAAAAEgAAABIAAAASAAAAEgAAABIAAAAGA/0ACQAAAAkD/QAJA/0AEgAAABIAAAASAAAAEgAAABIAAAASAAAAEgAAABIAAAASAAAAEgAAABIAAAASAAAAEgAAABIAAAASAAAAEgAAABIAAAASAAAAEgAAABIAAAASAAAAEgAAABIAAAASAAAAEgAAABIAAAASAAAAEgAAABIAAAASAAAAEgAAABgAAAAVAAAAFQAAABIAAAASAAAAEgAAABIAAAASAAAAEgAAABIAAAASAAAAEgAAABIAAAASAAAAEgAAABIAAAASAAAAEgAAABIAAAASAAAAEgAAABIAAAASAAAAEgAAABUAAAAPA/0ADwP9AAwAAAAJA/0ADAAAAAkD/QAMAAAACQAAAAwAAAAGAAAAHgAAABgAAAASAAAAFQAAABIAAAAPAAAADwAAABIAAAAJAAAAEgAAAAkAAAASAAAADAAAABIAAAAMAAAAFQAAAAwAAAASAAAAEgAAABIAAAASAAAAEgAAABIAAAAYAAAAEgAAABIAAAASAAAAEgAAABIAAAASAAAAEgAAABIAAAAeAAAAHgAAABIAAAASAAAAEgAAABIAAAASAAAAEgAAABIAAAASAAAAEgAAABIAAAASAAAAEgAAABIAAAASAAAAEgAAAAwAAAASAAAAEgAAABIAAAAMAAAAEgAAABIAAAASAAAAEgAAABIAAAASAAAAEgAAABIAAAASAAAAEgAAABIAAAASAAAAEgAAABIAAAASAAAAEgAAABIAAAASAAAAEgAAABIAAAASAAAAEgAAABIAAAAPAAAAEgAAAA8AAAASAAAAEgAAABIAAAASAAAAEgAAABUAAAAVAAAAEgAAABIAAAASAAAADwAAABIAAAASAAAAEgAAABIAAAASAAAAEgAAAB4AAAAeAAAAEgAAABIAAAASAAAAEgAAABIAAAAMAAAAEgAAABIAAAASAAAADAAAAAwAAAAMAAAACQAAAAkAAAAMAAAACQADAAwAAAAJAAAAEgAAAA8AAAAJAAAACQAAAAYAAAAGAAAAEgAAABgAAAAGAAAAGAAAABgAAAASAAAAGAAAABgAAAAYAAAADwP9ABIAAAASAAAAEgAAABIAAAASAAAAEgAAABIAAAASAAAADAAAABIAAAASAAAAEgAAABIAAAASAAAAEgAAABIAAAASAAAAEgAAABIAAAASAAAAEgAAABIAAAASAAAAEgAAAAwAAAASAAAAEgAAABIAAAASAAAABgAAABIAAAASAAAAEgAAABIAAAASAAAAEgAAABIAAAASAAAADwAAAAYAAAAPAAAAEgAAABIAAAASAAAAEgAAABIAAAASAAAAEgAAABIAAAASAAAAEgAAABIAAAASAAAAEgAAABIAAAASAAAADAAAABIAAAASAAAAEgAAABIAAAASAAAAEgAAABIAAAAVAAAAEgAAABIAAAASAAAADAAAAAwAAAASAAAAHgAAAB4AAAAVAAAAEgAAABIAAAASAAAAEgAAABIAAAASAAAAEgAAABIAAAASAAAAEgAAABIAAAASAAAAEgAAABIAAAASAAAAEgAAABIAAAASAAAAEgAAABIAAAASAAAAEgAAABIAAAASAAAAEgAAABIAAAAVAAAAEgAAABIAAAAVAAAAFQAAABgAAAASAAAAEgAAABIAAAASAAAAEgAAABIAAAASAAAAEgAAABIAAAASAAAAEgAAABIAAAASAAAAEgAAAA8AAAASAAAAEgAAABIAAAASAAAAEgAAABIAAAASAAAAEgAAABIAAAAYAAAAEgAAABUAAAASAAAAEgAAABUAAAASAAAAFQAAAA8AAAASAAAAEgAAABIAAAASAAAAEgAAABUAAAASAAAAEgAAABIAAAAGAAAADAAAABIAAAAbAAAAGwAAABUAAAAPAAAAEgAAABIAAAASAAAAFQAAABUAAAASAAAAEgAAABIAAAASAAAAFQAAABUAAAAVAAAAEgAAABIAAAASAAAAEgAAABIAAAAVAAAAFQAAABUAAAAVAAAAEgAAABIAAAAVAAAADwAAABIAAAASAAAAFQAAABIAAAAVAAAAFQAAABIAAAASAAAAEgAAABIAAAASAAAAEgAAABUAAAAVAAAAFQAAABUAAAASAAAAEgAAABIAAAASAAAABgAAABIAAAASAAAAFQAAABUAAAASAAAAEgAAABUAAAAVAAAAFQAAABIAAAAGAAAAEgAAABIAAAAeAAAAHgAAABIAAAASAAAAEgAAABIAAAASAAAAEgAAABIAAAASAAAAEgAAABIAAAASAAAAEgAAABIAAAASAAAAEgAAABIAAAASAAAAEgAAABIAAAASAAAAEgAAABIAAAASAAAAEgAAABIAAAAJAAAACQAAAAkAAAAJAAAADwAAAA8AAAAPAAAADwAAAAwAAAAMAAAACQAAAAwAAAASAAAAGAAAAAwAAAASAAAADAAAABIAAAAJAAAACQAAAAwD+gAMAAAABgAAAAwAAAAMAAAADAAAAAwAAAAMAAAADAAAAAwAAAAMAAAADAAAAAwAAAAMAAAADAAAAAwAAAAMAAAADAAAAAwAAAASAAAAEgAAABIAAAASAAAAEgAAABIAAAASAAAAEgAAABgAAAAPAAAAGwAAABgAAAAYAAAAGAAAABUAAAAbAAAAGwAAACQAAAAbAAAAGwAAABsAAAAbAAAAGwAAABsAAAAbAAAAGwAAABsAAAAbAAAAGwAAABsAAAAYAAAAGAAAABgAAAAYAAAAGAAAABUAAwAYAAAAGAAAABgAAAAYAAAAGAAAABIAAAAbAAAAGAAAABIAAAASAAAAFQAAABIAAAAVAAAAFQAAAAwAAAAMAAAAEgAAABIAAAAPAAAADwAAABUAAAAVAAAAEgAAABUAAAAPAAAAFQAAABUAAAAPAAAADwAAABIAAAAJAAAACQAAABUAAAAYAAAAAAQAB//8AAgAAAAEAAAAAAAEAAAAOAAAAGAAgAAAAAgABAAEC1AABAAQAAAACAAAAAQAAAAEAAAAAABoBPgABAAAAAAAAABsAAAABAAAAAAABAAsAGwABAAAAAAACAAcAJgABAAAAAAADAA8ALQABAAAAAAAEAA8APAABAAAAAAAFAAsASwABAAAAAAAGABMAVgABAAAAAAAIABYAaQABAAAAAAAJAAwAfwABAAAAAAALABYAiwABAAAAAAAMABYAoQABAAAAAAANACgAtwABAAAAAAATACkA3wADAAEECQAAADYBCAADAAEECQABABYBPgADAAEECQACAA4BVAADAAEECQADAB4BYgADAAEECQAEAB4BgAADAAEECQAFABYBngADAAEECQAGACYBtAADAAEECQAIACwB2gADAAEECQAJABgCBgADAAEECQALACwCHgADAAEECQAMACwCSgADAAEECQANAFACdgADAAEECQATAFICxkNvcHlyaWdodCBBbmRyZXcgVHlsZXIgMjAxNE1pbmVjcmFmdGlhUmVndWxhck1pbmVjcmFmdGlhIDIuME1pbmVjcmFmdGlhIDIuMFZlcnNpb24gMi4wTWluZWNyYWZ0aWEtUmVndWxhcmh0dHA6Ly9hbmRyZXd0eWxlci5uZXRBbmRyZXcgVHlsZXJodHRwOi8vYW5kcmV3dHlsZXIubmV0aHR0cDovL2FuZHJld3R5bGVyLm5ldENyZWF0aXZlIENvbW1vbnMgQXR0cmlidXRpb24gU2hhcmUgQWxpa2VGaXZlIGJpZyBxdWFja2luZyB6ZXBoeXJzIGpvbHQgbXkgd2F4IGJlZABDAG8AcAB5AHIAaQBnAGgAdAAgAEEAbgBkAHIAZQB3ACAAVAB5AGwAZQByACAAMgAwADEANABNAGkAbgBlAGMAcgBhAGYAdABpAGEAUgBlAGcAdQBsAGEAcgBNAGkAbgBlAGMAcgBhAGYAdABpAGEAIAAyAC4AMABNAGkAbgBlAGMAcgBhAGYAdABpAGEAIAAyAC4AMABWAGUAcgBzAGkAbwBuACAAMgAuADAATQBpAG4AZQBjAHIAYQBmAHQAaQBhAC0AUgBlAGcAdQBsAGEAcgBoAHQAdABwADoALwAvAGEAbgBkAHIAZQB3AHQAeQBsAGUAcgAuAG4AZQB0AEEAbgBkAHIAZQB3ACAAVAB5AGwAZQByAGgAdAB0AHAAOgAvAC8AYQBuAGQAcgBlAHcAdAB5AGwAZQByAC4AbgBlAHQAaAB0AHQAcAA6AC8ALwBhAG4AZAByAGUAdwB0AHkAbABlAHIALgBuAGUAdABDAHIAZQBhAHQAaQB2AGUAIABDAG8AbQBtAG8AbgBzACAAQQB0AHQAcgBpAGIAdQB0AGkAbwBuACAAUwBoAGEAcgBlACAAQQBsAGkAawBlAEYAaQB2AGUAIABiAGkAZwAgAHEAdQBhAGMAawBpAG4AZwAgAHoAZQBwAGgAeQByAHMAIABqAG8AbAB0ACAAbQB5ACAAdwBhAHgAIABiAGUAZAAAAAAAAwAAAAMAAAAeAAEAAAAAAyYAAwABAAAFMAAAAAQDCAAAAK4AgAAGAC4AfgCsAX8BgwGPAZIBtwHrAe8B/wIbAjcCWQKSAscCywLdA3UDfgOKA4wDoQPOA9cEXwRjBHUEkwSdBKMEqwSzBLsEwgTKBM8E1QTZBOkE8R6FHp4e8yAjICYgMCAzIDYgOiBEIHEgeSCJIKkgrCCuILEgtCC6IQUhEyEXISAhIiEuIV4hmSIG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",
            ["Down Gradient"] = "iVBORw0KGgoAAAANSUhEUgAAAfQAAAH0CAYAAADL1t+KAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAAYdEVYdFNvZnR3YXJlAFBhaW50Lk5FVCA1LjEuMWK1UgwAAAAOZVhJZk1NACoAAAAIAAAAAAAAANJTkwAACFZJREFUeF7t2cFpVVEUhtF7BIdpIA04cCJIHNuADVhAGrAB29FurMdBssN5FRgwnI+14OftDj7Ou+u6rp8zAOBg726/AMDBBB0AAgQdAAIEHQACBB0AAgQdAAIEHQACBB0AAgQdAAIEHQACBB0AAgQdAAIEHQACBB0AAgQdAAIEHQACBB0AAgQdAAIEHQACBB0AAgQdAAIEHQACBB0AAgQdAAIEHQACBB0AAgQdAAIEHQACBB0AAgQdAAIEHQACBB0AAgQdAAIEHQACBB0AAgQdAAIEHQACBB0AAgQdAAIEHQACBB0AAgQdAAIEHQACBB0AAgQdAAIEHQACBB0AAgQdAAIEHQAC1uzHPgGAU3mhA0CAoANAgKADQICgA0CAoANAgKADQICgA0CAoANAgKADQICgA0CAoANAgKADQICgA0CAoANAgKADQICgA0CAoANAgKADQICgA0CAoANAgKADQICgA0CAoANAgKADQICgA0CAoANAgKADQICgA0CAoANAgKADQICgA0CAoANAgKADQICgA0CAoANAgKADQICgA0CAoANAgKADQICgA0CAoANAgKADQICgA0CAoANAgKADQICgA0CAoANAgKADQICgA0DAmj3uEwA4lRc6AAQIOgAECDoABAg6AAQIOgAECDoABAg6AAQIOgAECDoABAg6AAQIOgAECDoABAg6AAQIOgAECDoABAg6AAQIOgAECDoABAg6AAQIOgAECDoABAg6AAQIOgAECDoABAg6AAQIOgAECDoABAg6AAQIOgAECDoABAg6AAQIOgAECDoABAg6AAQIOgAECDoABAg6AAQIOgAECDoABAg6AAQIOgAECDoABAg6AAQIOgAECDoABAg6AAQIOgAECDoABAg6AASs2fd9AgCn8kIHgABBB4AAQQeAAEEHgABBB4AAQQeAAEEHgABBB4AAQQeAAEEHgABBB4AAQQeAAEEHgABBB4AAQQeAAEEHgABBB4AAQQeAAEEHgABBB4AAQQeAAEEHgABBB4AAQQeAAEEHgABBB4AAQQeAAEEHgABBB4AAQQeAAEEHgABBB4AAQQeAAEEHgABBB4AAQQeAAEEHgABBB4AAQQeAAEEHgABBB4AAQQeAAEEHgABBB4AAQQeAAEEHgABBB4AAQQeAAEEHgIA1+7ZPAOBUXugAECDoABAg6AAQIOgAECDoABAg6AAQIOgAECDoABAg6AAQIOgAECDoABAg6AAQIOgAECDoABAg6AAQIOgAECDoABAg6AAQIOgAECDoABAg6AAQIOgAECDoABAg6AAQIOgAECDoABAg6AAQIOgAECDoABAg6AAQIOgAECDoABAg6AAQIOgAECDoABAg6AAQIOgAECDoABAg6AAQIOgAECDoABAg6AAQIOgAECDoABAg6AAQIOgAECDoABAg6AAQIOgAELBmX/cJAJzKCx0AAgQdAAIEHQACBB0AAgQdAAIEHQACBB0AAgQdAAIEHQACBB0AAgQdAAIEHQACBB0AAgQdAAIEHQACBB0AAgQdAAIEHQACBB0AAgQdAAIEHQACBB0AAgQdAAIEHQACBB0AAgQdAAIEHQACBB0AAgQdAAIEHQACBB0AAgQdAAIEHQACBB0AAgQdAAIEHQACBB0AAgQdAAIEHQACBB0AAgQdAAIEHQACBB0AAgQdAAIEHQACBB0AAgQdAAIEHQACBB0AAtbs8z4BgFN5oQNAgKADQICgA0CAoANAgKADQICgA0CAoANAgKADQICgA0CAoANAgKADQICgA0CAoANAgKADQICgA0CAoANAgKADQICgA0CAoANAgKADQICgA0CAoANAgKADQICgA0CAoANAgKADQICgA0CAoANAgKADQICgA0CAoANAgKADQICgA0CAoANAgKADQICgA0CAoANAgKADQICgA0CAoANAgKADQICgA0CAoANAgKADQICgA0CAoANAgKADQICgA0CAoANAwJp92CcAcCovdAAIEHQACBB0AAgQdAAIEHQACBB0AAgQdAAIEHQACBB0AAgQdAAIEHQACBB0AAgQdAAIEHQACBB0AAgQdAAIEHQACBB0AAgQdAAIEHQACBB0AAgQdAAIEHQACBB0AAgQdAAIEHQACBB0AAgQdAAIEHQACBB0AAgQdAAIEHQACBB0AAgQdAAIEHQACBB0AAgQdAAIEHQACBB0AAgQdAAIEHQACBB0AAgQdAAIEHQACBB0AAgQdAAIEHQACBB0AAgQdAAIWLP7fQIAp/JCB4AAQQeAAEEHgABBB4AAQQeAAEEHgABBB4AAQQeAAEEHgABBB4AAQQeAAEEHgABBB4AAQQeAAEEHgABBB4AAQQeAAEEHgABBB4AAQQeAAEEHgABBB4AAQQeAAEEHgABBB4AAQQeAAEEHgABBB4AAQQeAAEEHgABBB4AAQQeAAEEHgABBB4AAQQeAAEEHgABBB4AAQQeAAEEHgABBB4AAQQeAAEEHgABB57Xezx5mX243AG9A0Hmtj7Pfs1+3G4A3sGb3+4R/8vIq/zR7mv2Z/Z0B8J8JOgAE+MsdAAIEHQACBB0AAl6+od/tEwA4lRc6AAQIOgAECDoABAg6AAQIOgAECDoABAg6AAQIOgAECDoABAg6AAQIOgAECDoABAg6AAQIOgAECDoABAg6AAQIOgAECDoABAg6AAQIOgAECDoABAg6AAQIOgAECDoABAg6AAQIOgAECDoABAg6AAQIOgAECDoABAg6AAQIOgAECDoABAg6AAQIOgAECDoABAg6AAQIOgAECDoABAg6AAQIOgAECDoABAg6AAQIOgAECDoABAg6AAQIOgAECDoABAg6ABzvup4B97sL8OFx3r0AAAAASUVORK5CYII=",
            ["Gradient"] = "iVBORw0KGgoAAAANSUhEUgAAAfQAAAH0CAYAAADL1t+KAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAACxMAAAsTAQCanBgAAAAYdEVYdFNvZnR3YXJlAFBhaW50Lk5FVCA1LjEuMWK1UgwAAAC2ZVhJZklJKgAIAAAABQAaAQUAAQAAAEoAAAAbAQUAAQAAAFIAAAAoAQMAAQAAAAIAAAAxAQIAEAAAAFoAAABphwQAAQAAAGoAAAAAAAAASRkBAOgDAABJGQEA6AMAAFBhaW50Lk5FVCA1LjEuMQADAACQBwAEAAAAMDIzMAGgAwABAAAAAQAAAAWgBAABAAAAlAAAAAAAAAACAAEAAgAEAAAAUjk4AAIABwAEAAAAMDEwMAAAAADdc0paBygUuAAACFFJREFUeF7t2kGNVEEUhtFXJCzHAAZYsCIDewxgAAFjAAPoATP4mQVzSbWC3nTqyznJn74OvlTnreu6nmYAwMHe3X4BgIMJOgAECDoABAg6AAQIOgAECDoABAg6AAQIOgAECDoABAg6AAQIOgAECDoABAg6AAQIOgAECDoABAg6AAQIOgAECDoABAg6AAQIOgAECDoABAg6AAQIOgAECDoABAg6AAQIOgAECDoABAg6AAQIOgAECDoABAg6AAQIOgAECDoABAg6AAQIOgAECDoABAg6AAQIOgAECDoABAg6AAQIOgAECDoABAg6AAQIOgAECDoABAg6AAQIOgAECDoABAg6AASs2Yd9AgCn8kIHgABBB4AAQQeAAEEHeJz3sy+zr7cb7iboAI/zafZn9vt2w9185Q7wOP9f5Z9n/2Z/Z68zuIugA0CAv9wBIEDQASBA0AEgQNABIEDQASBA0AEgQNABIEDQASBA0AEgQNABIEDQASBA0AEgQNABIEDQASBA0AEgQNABIEDQASBA0AEgQNABIEDQASBA0AEgQNABIEDQASBA0AEgQNABIEDQASBA0AEgQNABIEDQASBA0AEgQNABIEDQASBA0AEgQNABIEDQASBA0AEgQNABIEDQASBA0AEgQNABIEDQASBA0AEgYM0+7hMAOJUXOgAECDoABAg6AAQIOgAECDoABAg6AAQIOgAECDoABAg6AAQIOgAECDoABAg6AAQIOgAECDoABAg6AAQIOgAECDoABAg6AAQIOgAECDoABAg6AAQIOgAECDoABAg6AAQIOgAECDoABAg6AAQIOgAECDoABAg6AAQIOgAECDoABAg6AAQIOgAECDoABAg6AAQIOgAECDoABAg6AAQIOgAECDoABAg6AAQIOgAECDoABAg6AAQIOgAECDoABAg6AAQIOgAErNnzPgGAU3mhA0CAoANAgKADQICgA0CAoANAgKADQICgA0CAoANAgKADQICgA0CAoANAgKADQICgA0CAoANAgKADQICgA0CAoANAgKADQICgA0CAoANAgKADQICgA0CAoANAgKADQICgA0CAoANAgKADQICgA0CAoANAgKADQICgA0CAoANAgKADQICgA0CAoANAgKADQICgA0CAoANAgKADQICgA0CAoANAgKADQICgA0CAoANAgKADQICgA0CAoANAgKADQICgA0DAmn3bJwBwKi90AAgQdAAIEHQACBB0AAgQdAAIEHQACBB0AAgQdAAIEHQACBB0AAgQdAAIEHQACBB0AAgQdAAIEHQACBB0AAgQdAAIEHQACBB0AAgQdAAIEHQACBB0AAgQdAAIEHQACBB0AAgQdAAIEHQACBB0AAgQdAAIEHQACBB0AAgQdAAIEHQACBB0AAgQdAAIEHQACBB0AAgQdAAIEHQACBB0AAgQdAAIEHQACBB0AAgQdAAIEHQACBB0AAgQdAAIEHQACBB0AAhYs+/7BABO5YUOAAGCDgABgg4AAYIOAAGCDgABgg4AAYIOAAGCDgABgg4AAYIOAAGCDgABgg4AAYIOAAGCDgABgg4AAYIOAAGCDgABgg4AAYIOAAGCDgABgg4AAYIOAAGCDgABgg4AAYIOAAGCDgABgg4AAYIOAAGCDgABgg4AAYIOAAGCDgABgg4AAYIOAAGCDgABgg4AAYIOAAGCDgABgg4AAYIOAAGCDgABgg4AAYIOAAGCDgABgg4AAYIOAAGCDgABgg4AAYIOAAFr9mOfAMCpvNABIEDQASBA0AEgQNABIEDQASBA0AEgQNABIEDQASBA0AEgQNABIEDQASBA0AEgQNABIEDQASBA0AEgQNABIEDQASBA0AEgQNABIEDQASBA0AEgQNABIEDQASBA0AEgQNABIEDQASBA0AEgQNABIEDQASBA0AEgQNABIEDQASBA0AEgQNABIEDQASBA0AEgQNABIEDQASBA0AEgQNABIEDQASBA0AEgQNABIEDQASBA0AEgQNABIEDQASBA0AEgQNABIGDNXvYJAJzKCx0AAgQdAAIEHQACBB0AAgQdAAIEHQACBB0AAgQdAAIEHQACBB0AAgQdAAIEHQACBB0AAgQdAAIEHQACBB0AAgQdAAIEHQACBB0AAgQdAAIEHQACBB0AAgQdAAIEHQACBB0AAgQdAAIEHQACBB0AAgQdAAIEHQACBB0AAgQdAAIEHQACBB0AAgQdAAIEHQACBB0AAgQdAAIEHQACBB0AAgQdAAIEHQACBB0AAgQdAAIEHQACBB0AAgQdAAIEHQACBB0AAtbs5z4BgFN5oQNAgKADQICgA0CAoANAgKADQICgA0CAoANAgKADQICgA0CAoANAgKADQICgA0CAoANAgKADQICgA0CAoANAgKADQICgA0CAoANAgKADQICgA0CAoANAgKADQICgA0CAoANAgKADQICgA0CAoANAgKADQICgA0CAoANAgKADQICgA0CAoANAgKADQICgA0CAoANAgKADQICgA0CAoANAgKADQICgA0CAoANAgKADQICgA0CAoANAgKADQICgA0CAoANAwJr92icAcCovdAAIEHQACBB0AAgQdAAIEHQACBB0AAgQdAAIEHQACBB0AAgQdAAIEHQACBB0AAgQdAAIEHQACBB0AAgQdAAIEHQACBB0AAgQdAAIEHQACBB0AAgQdAAIEHQACBB0AAgQdAAIEHQACBB0AAgQdAAIEHQACBB0AAgQdAAIEHQACBB0AAgQdAAIEHQACBB0AAgQdAAIEHQACBB0AAgQdAAIEHQACBB0AAgQdAAIEHQACBB0AAgQdAAIEHQACBB0AAgQdAA43nW9AcyiC/DvyBpUAAAAAElFTkSuQmCC",
            ["Colorpicker Valsat 3"] = "",
            ["Colorpicker Cursor"] = "iVBORw0KGgoAAAANSUhEUgAAAAUAAAAFCAYAAACNbyblAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAArSURBVBhXY2RgYPgPxCgALAgEEB4QMDIyMjBB2QyO+r59UCZ2lVjMZGAAAIYsC06z8RzpAAAADmVYSWZNTQAqAAAACAAAAAAAAADSU5MAAAAASUVORK5CYII=",
            ["Colorpicker Hue2"] = "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",
            ["Colorpicker Checker 5"] = "iVBORw0KGgoAAAANSUhEUgAAAJgAAAAQCAYAAADqIbaUAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAABrSURBVGhD7dixDYAgAERRcASGZwamYwWtJdEGrzHvlSRnLH4oqL33s7VW3sw516Mbe/sndYxx7nygbP5Asf/1/lgP4EsCI0pgRAmMKIERJTCiBEZU9dBqn9y7wYgSGFECI0pgRAmMKIERdQFxUFzN69SIQQAAAA5lWElmTU0AKgAAAAgAAAAAAAAA0lOTAAAAAElFTkSuQmCC",
            ["Colorpicker Overlay 6"] = "iVBORw0KGgoAAAANSUhEUgAAAKAAAAAOCAMAAACfB+eBAAAAAXNSR0IB2cksfwAAAAlwSFlzAAALEwAACxMBAJqcGAAAAbcgAAAJF0Uk5T+Pf29fTz8vHw7+7t7Ovq6ejn5uXk4+Hg397d3NvZ2NfW1NPS0M/OzcvKyMfGxMPCwL+9vLq5t7a1s7Kwr62rqqinpaSioZ+dnJqZl5WUkpGPjYyKiIeFhIKAfnx4dnJvbWlnZGBeW1hVUk9MSkdEQj88Ojc1MjAtKykmJCIfHRsZFxUUEhAODAsJCAYFBAIBAIu0/SkAAAAySURBVHicY2RgZGAEAQg5KAADMmAcdSDpYNSBlIJRB1IKRh1IKRh1IKVg1IGUgqHlQAAfxgfvYDswOgAAAABJRU5ErkJggg==",
        },

        Flags = {},
        Cache = {},

        Fonts = {},
        Images = {},
        Theme = {},

        Renders = {},
        Connections = {},

        LoadedLuas = {},

        KeyCodes = {
            "Q",
            "W",
            "E",
            "R",
            "T",
            "Y",
            "U",
            "I",
            "O",
            "P",
            "A",
            "S",
            "D",
            "F",
            "G",
            "H",
            "J",
            "K",
            "L",
            "Z",
            "X",
            "C",
            "V",
            "B",
            "N",
            "M",
            "One",
            "Two",
            "Three",
            "Four",
            "Five",
            "Six",
            "Seven",
            "Eight",
            "Nine",
            "Zero",
            "Minus",
            "Equals",
            "F1",
            "F2",
            "F3",
            "F4",
            "F5",
            "F6",
            "F7",
            "F8",
            "F9",
            "F10",
            "F11",
            "F12",
            "Insert",
            "Tab",
            "Home",
            "End",
            "LeftAlt",
            "LeftControl",
            "LeftShift",
            "RightAlt",
            "RightControl",
            "RightShift",
            "CapsLock"
        },
        InputShorts = {
            ["MouseButton1"] = "MB1",
            ["MouseButton2"] = "MB2",
            ["MouseButton3"] = "MB3",
            ["Insert"] = "Ins",
            ["Minus"] = "-",
            ["Equals"] = "=",
            ["LeftAlt"] = "LAlt",
            ["LeftControl"] = "LC",
            ["LeftShift"] = "LS",
            ["RightAlt"] = "RAlt",
            ["RightControl"] = "RC",
            ["RightShift"] = "RS",
            ["CapsLock"] = "Caps"
        },
        InputTypes = {
            "MouseButton1",
            "MouseButton2",
            "MouseButton3"
        }
    }


    -- Clearing
    do
        if Menu.Clear then
            if FindFirstChild(CoreGui, Menu.BasePath) then
                Destroy(FindFirstChild(CoreGui, Menu.BasePath))

                if FindFirstChild(CoreGui, Menu.BasePath) then
                    Destroy(FindFirstChild(CoreGui, Menu.BasePath))
                end
            end
        end
    end


    local Theme = Menu.Theme
    local Fonts = Menu.Fonts
    local Images = Menu.Images
    local Flags = Menu.Flags
    local EncodedAssets = Menu.EncodedAssets
    local Connections = Menu.Connections


    -- Framework
    do
        function Menu.Draw(Type : String, Properties : Table, Table : Table)
            local Render = NewInstance(Type)

            if Type == "Frame" then
                Render.BorderSizePixel = 1
                Render.BackgroundTransparency = 0
                Render.BorderColor3 = NewRGB(0, 0, 0)
                Render.BackgroundColor3 = NewRGB(0, 0, 0)
                Render.ZIndex = Menu.CurrentZIndex
                Render.Visible = true
            elseif Type == "ViewportFrame" then
                Render.BorderSizePixel = 1
                Render.BackgroundTransparency = 0
                Render.BorderColor3 = NewRGB(0, 0, 0)
                Render.BackgroundColor3 = NewRGB(0, 0, 0)
                Render.ZIndex = Menu.CurrentZIndex
                Render.Visible = true
            elseif Type == "UIStroke" then
                Render.LineJoinMode = Enum.LineJoinMode.Miter
                Render.ApplyStrokeMode = Enum.ApplyStrokeMode.Contextual
                Render.Color = NewRGB(0, 0, 0)
                Render.Transparency = 0
                Render.Thickness = 1
            elseif Type == "TextLabel" then
                Render.BackgroundTransparency = 1
                Render.TextStrokeTransparency = 1
                Render.TextTransparency = 0
                Render.BorderSizePixel = 0
                Render.Text = "text"
                Render.TextStrokeColor3 = NewRGB(0, 0, 0)
                Render.ZIndex = Menu.CurrentZIndex
                Render.Visible = true
            elseif Type == "TextButton" then
                Render.BorderSizePixel = 1
                Render.BackgroundTransparency = 0
                Render.TextStrokeTransparency = 1
                Render.BorderColor3 = NewRGB(0, 0, 0)
                Render.BackgroundColor3 = NewRGB(50, 50, 50)
                Render.TextStrokeColor3 = NewRGB(0, 0, 0)
                Render.AutoButtonColor = false
                Render.RichText = true
                Render.ZIndex = Menu.CurrentZIndex
                Render.Visible = true
            elseif Type == "ImageButton" then
                Render.BorderSizePixel = 1
                Render.BackgroundTransparency = 0
                Render.ImageColor3 = NewRGB(255, 255, 255)
                Render.BorderColor3 = NewRGB(0, 0, 0)
                Render.BackgroundColor3 = NewRGB(50, 50, 50)
                Render.ResampleMode = "Default"
                Render.AutoButtonColor = false
                Render.ZIndex = Menu.CurrentZIndex
                Render.Visible = true
            elseif Type == "ImageLabel" then
                Render.BorderSizePixel = 1
                Render.BackgroundTransparency = 0
                Render.ImageColor3 = NewRGB(255, 255, 255)
                Render.BorderColor3 = NewRGB(0, 0, 0)
                Render.BackgroundColor3 = NewRGB(50, 50, 50)
                Render.ResampleMode = "Default"
                Render.ZIndex = Menu.CurrentZIndex
                Render.Visible = true
            elseif Type == "ScrollingFrame" then
                Render.BorderSizePixel = 1
                Render.BackgroundTransparency = 1
                Render.BorderColor3 = NewRGB(0, 0, 0)
                Render.BackgroundColor3 = NewRGB(0, 0, 0)
                Render.ZIndex = Menu.CurrentZIndex
                Render.Visible = true
            elseif Type == "TextBox" then
                Render.ClearTextOnFocus = false
                Render.PlaceholderText = "Placeholder"
                Render.TextStrokeColor3 = NewRGB(0, 0, 0)
                Render.TextStrokeTransparency = 1
                Render.BorderSizePixel = 1
                Render.BackgroundTransparency = 1
                Render.BorderColor3 = NewRGB(0, 0, 0)
                Render.BackgroundColor3 = NewRGB(0, 0, 0)
                Render.ZIndex = Menu.CurrentZIndex
                Render.Visible = true
            elseif Type == "ScreenGui" then
                Render.DisplayOrder = 10
                Render.ZIndexBehavior = Enum.ZIndexBehavior.Global
            end

            if Type ~= "UIStroke" and Properties["TextStrokeTransparency"] ~= nil then
                Menu.Draw("UIStroke", {
                    Parent = Render,
                    Color = Properties.TextStrokeColor3 or NewRGB(0, 0, 0),
                    LineJoinMode = Properties.LineJoinMode or Enum.LineJoinMode.Miter,
                    ApplyStrokeMode = Properties.ApplyStrokeMode or Enum.ApplyStrokeMode.Contextual,
                    Thickness = Properties.Thickness or 1,
                    Transparency = Properties.TextStrokeTransparency or 0
                })
            end

            if StringFind(Lower(Type), "text") then
                local Font = Properties.FontFace or Fonts.Minecraftia

                Render["FontFace"] = Font[1]
                Render["TextSize"] = Font[2]
                Render["TextColor3"] = Font[3]
            end

            for Index, Value in next, Properties do
                if Index == "FontFace" or Index == "TextStrokeTransparency" then continue end

                Render[Index] = Value
            end

            if typeof(Table) == "table" then
                Table[#Table + 1] = Render
            end

            Menu.CurrentZIndex += 1
            Menu.Renders[#Menu.Renders + 1] = Render

            return Render
        end

        function Menu.Remove(Object : Instance)
            local Renders = Menu.Renders
            local Descendants = Menu.GetDescendants(Object)

            for i = 1, #Descendants do
                Remove(Renders, Find(Renders, Descendants[i]))
            end

            Destroy(Object)
        end

        function Menu.ToRichText(String : String, Color : Color3)
            return Gsub(String, "#s", Format("%s, %s, %s", Round(Color.R * 255), Round(Color.G * 255), Round(Color.B * 255)))
        end

        function Menu.GetDescendants(Object : Instance)
            return { Object, Unpack(GetDescendants(Object)) }
        end

        function Menu.Tween(Object : Instance, Info : TweenInfo, Properties : Table)
            local Tween = TweenService:Create(Object, Info, Properties)
            
            Tween:Play()

            return Tween
        end

        function Menu.Error(Message : String)
            error(Message)
        end

        function Menu.Config(Action : String, Method : String)
            if Action == "New" then
                return WriteFile(Format("%s/%s.cfg", Menu.Folders.Configs, Method), Menu.Config("Get"))
            elseif Action == "Get" then
                local List = {}

                for Section, Values in next, Flags do
                    if typeof(Values.Get) == "function" then
                        List[Section] = Values.Get()
                    else
                        List[Section] = {}

                        for Name, Value in next, Values do
                            if typeof(Value) == "table" and typeof(Value.Get) == "function" then
                                List[Section][Name] = Value.Get()
                            end
                        end
                    end
                end

                return JSONEncode(HttpService, List)
            elseif Action == "Load" then
                local Path = Format("%s/Configs/%s.cfg", Menu.BasePath, Method)

                local Config = JSONDecode(HttpService, IsFile(Path) and ReadFile(Path) or Method)

                for Section, Values in next, Config do
                    local Category = Flags[Section]

                    if Category then
                        if typeof(Category.Set) == "function" then
                            Category.Set(Values)
                        else
                            for Name, Value in next, Values do
                                local Flag = Category[Name]

                                if Flag then
                                    Flag.Set(Value)
                                end
                            end
                        end
                    end
                end

                return Config
            elseif Action == "Save" then
                local Path = Format("%s/Configs/%s.cfg", Menu.BasePath, Method)

                if IsFile(Path) then
                    return WriteFile(Path, Menu.Config("Get"))
                end
            elseif Action == "Reset" then
                local Path = Format("%s/%s.cfg", Menu.Folders.Configs, Method)

                if IsFile(Path) then
                    return WriteFile(Path, "{}")
                end
            elseif Action == "Delete" then
                local Path = Format("%s/%s.cfg", Menu.Folders.Configs, Method)

                if IsFile(Path) then
                    return DelFile(Path)
                end
            elseif Action == "List" then
                local List = {}
                local Configs = ListFiles(Menu.Folders.Configs)

                for i = 1, #Configs do
                    List[#List + 1] = Match(Configs[i], "([^/\\]+)%.cfg$")
                end

                return List
            end
        end

        function Menu.Lua(Action : String, Name : String)
            if Action == "List" then
                local List = {}
                local Luas = ListFiles(Menu.Folders.Luas)

                for i = 1, #Luas do
                    List[#List + 1] = Match(Luas[i], "([^/\\]+).lua")
                end

                return List
            elseif Action == "Load" then
                local Path = Format("%s/%s.lua", Menu.Folders.Luas, Name)

                if IsFile(Path) then
                    Menu.Lua("Unload", Name)

                    local Module = LoadFile(Path)()
                    Module.Load({ ["Menu"] = Menu })

                    Menu.LoadedLuas[Name] = Module
                end
            elseif Action == "Unload" then
                local Module = Menu.LoadedLuas[Name]

                if Module then
                    Module.Unload()
                    Module = nil
                end
            end
        end

        function Menu.Unload(Fade : Boolean)
            local Window = Menu.Window
            local Watermark = Menu.Watermark

            Wrap(function()
                if Window then
                    if Fade and Window.IsVisible and not Window.IsFading then
                        Window.Fade(false)

                        Wait(0.25)
                    end

                    Menu.Remove(Window["Main Frame"])
                    Menu.Remove(Window["Notifcations Holder"])
                end
            end)()

            Wrap(function()
                if Watermark then
                    if Fade and Watermark.IsVisible and not Watermark.IsFading then
                        Watermark.Fade(false)

                        Wait(0.25)
                    end

                    Menu.Remove(Watermark.Frame)
                end
            end)()

            Delay(0.25, function()
                for i = 1, #Connections do
                    local Connection = Connections[i]

                    if Connection then
                        Connection:Disconnect()
                    end
                end

                Clear(Connections)
                Clear(Menu.Renders)
            end)
        end
    end


    -- Folders
    do
        if not IsFolder(Menu.BasePath) then
            MakeFolder(Menu.BasePath)
        end

        for _, Value in next, Menu.Folders do
            if not IsFolder(Value) then
                MakeFolder(Value)
            end
        end
    end


    -- Theme
    do
        Theme =  {
            ["White"] = NewRGB(255, 255, 255),

            ["A"] = NewRGB(0, 0, 0),
            ["B"] = NewRGB(24, 24, 24),
            ["C"] = NewRGB(34, 34, 34),
            ["D"] = NewRGB(17, 17, 17),
            ["E"] = NewRGB(12, 12, 12),
            ["F"] = NewRGB(56, 56, 69),
            ["G"] = NewRGB(55, 55, 64),
            ["H"] = NewRGB(18, 18, 24),
            ["I"] = NewRGB(75, 75, 86),

            ["Accent"] = NewRGB(209, 99, 203),
            ["Risky"] = NewRGB(218, 220, 126)
        }

        Menu.Theme = Theme
    end


    -- Fonts
    do
        function Menu.ImportFont(Name : String, Data : String, WeightNumber : Number, WeightEnum : Enum, StyleEnum : Enum)
            WeightNumber = typeof(WeightNumber) == "number" and WeightNumber or 400
            WeightEnum = typeof(WeightEnum) == "Enum" and WeightEnum or Enum.FontWeight.Regular
            StyleEnum = typeof(StyleEnum) == "Enum" and StyleEnum or Enum.FontStyle.Normal

            local Path = Format("%s/Fonts/", Menu.BasePath)

            local File1Path = Format("%s%s.ttf", Path, Name)
            local File2Path = Format("%s%s.font", Path, Name)

            WriteFile(File1Path, Decode(Data))

            WriteFile(File2Path, JSONEncode(HttpService, {
                name = Name,
                faces = {
                    {
                        name = "Regular",
                        weight = WeightNumber,
                        style = "normal",
                        assetId = GetCustomAsset(File1Path)
                    }
                }
            }))

            return NewFont(GetCustomAsset(File2Path), WeightEnum, StyleEnum)
        end

        function Menu.GetTextBounds(Text : String, FontFace : Table)
            local Params = NewInstance("GetTextBoundsParams")

            Params.Text = Text
            Params.Font = FontFace[1]
            Params.Size = FontFace[2]
            Params.Width = ScreenSize.X
            Params.RichText = true

            local Bounds = TextService:GetTextBoundsAsync(Params)

            Destroy(Params)

            return Bounds
        end

        Fonts = {
            ["Minecraftia"] = {
                [1] = Menu.ImportFont("Minecraftia", EncodedAssets["Minecraftia"]),
                [2] = 10,
                [3] = Theme.White
            }
        }

        Menu.Fonts = Fonts
    end


    -- Images
    do
        function Menu.ImportImage(Name : String, Data : String)
            local ImagePath = Format("%s/Images/%s.png", Menu.BasePath, Name)

            WriteFile(ImagePath, Decode(Data))
            local Image = GetCustomAsset(ImagePath)

            return Image
        end

        for Index, Data in next, Menu.EncodedAssets do
            if Fonts[Index] then continue end

            Images[Index] = Menu.ImportImage(Index, Data)
        end

        Menu.Images = Images
    end


    -- Init
    do
        Menu["Overlay"] = Menu.Draw("ScreenGui", { Name = Menu.BasePath, Parent = CoreGui })
        Menu["Overlay2"] = Menu.Draw("ScreenGui", { Name = Menu.BasePath, Parent = CoreGui })
    end


    -- Library
    do
        function Menu.CreateWindow(Parameters)
            if Menu.Window then
                Menu.Error("Menu already has a window!")
                return
            end

            Parameters = Parameters or {}

            local Name = Parameters.Name or "harvox.ui"
            local Size = (typeof(Parameters.Size) == "Vector2" and NewUDim2(0, Parameters.Size.X, 0, Parameters.Size.Y)) or (typeof(Parameters.Size) == "UDim2" and Parameters.Size) or NewUDim2(0, 400, 0, 540)
            local Bind = Parameters.Bind or Enum.KeyCode.RightAlt

            local WindowSize = NewVector2(Size.X.Offset, Size.Y.Offset)


            local Window = {
                IsFading = false,
                IsVisible = false,

                Cache = {},
                Tabs = {},

                Key = Bind
            }


            local Tabs = {}; Tabs.__index = Tabs
            local Sections = {}; Sections.__index = Sections
            local Elements = {}; Elements.__index = Elements


            -- Renders
            do
                local Outline = Menu.Draw("Frame", {Parent = Menu.Overlay, Position = NewUDim2(0.5, -WindowSize.X / 2, 0.5, -WindowSize.Y / 2), Size = Size, BackgroundColor3 = Theme.A, BorderSizePixel = 0, Visible = Window.IsVisible, Active = true, Draggable = true})

                local Inline = Menu.Draw("Frame", {Parent = Outline, Position = NewUDim2(0, 1, 0, 1), Size = NewUDim2(1, -2, 1, -2), BackgroundColor3 = Theme.Accent, BorderSizePixel = 0})

                local Outline2 = Menu.Draw("Frame", {Parent = Inline, Position = NewUDim2(0, 1, 0, 1), Size = NewUDim2(1, -2, 1, -2), BackgroundColor3 = Theme.B, BorderSizePixel = 0})

                Menu.Draw("TextLabel", {Parent = Outline2, Text = Name, FontFace = Fonts.Minecraftia, TextXAlignment = "Left", Position = NewUDim2(0, 5, 0, 11), TextStrokeTransparency = 0, RichText = true, BorderSizePixel = 0})

                local Inline2 = Menu.Draw("Frame", {Parent = Outline2, Position = NewUDim2(0, 4, 0, 51), Size = NewUDim2(1, -8, 1, -55), BackgroundColor3 = Theme.C, BorderSizePixel = 0})

                local Background = Menu.Draw("Frame", {Parent = Inline2, Position = NewUDim2(0, 1, 0, 1), Size = NewUDim2(1, -2, 1, -2), BackgroundColor3 = Theme.D, BorderSizePixel = 0})

                local Temp = Menu.Draw("Frame", {Parent = Outline2, Position = NewUDim2(0, 5, 0, 21), Size = NewUDim2(1, -10, 0, 25), BackgroundColor3 = Theme.White, BorderSizePixel = 0})

                local TabsHolder = Menu.Draw("Frame", {Parent = Temp, Position = NewUDim2(0, 1, 0, 1), Size = NewUDim2(1, -2, 1, -1), BackgroundTransparency = 1})
                local NotifcationsHolder = Menu.Draw("Frame", {Parent = Menu.Overlay, BackgroundTransparency = 1, Position = NewUDim2(0, 5, 0, 30), Size = NewUDim2(0, 300, 0, 200)})

                local ResizeButton = Menu.Draw("TextButton", {Parent = Outline, Position = NewUDim2(1, -30, 1, -30), Size = NewUDim2(0, 30, 0, 30), BackgroundTransparency = 1, Text = ""})

                Menu.Draw("UIGradient", {Parent = Temp, Color = NewColorSequence(NewRGB(14, 14, 14), Theme.B), Rotation = -90})
                Menu.Draw("UIStroke", {Parent = Temp, Color = Theme.C})

                Menu.Draw("UIListLayout", {Parent = NotifcationsHolder, VerticalAlignment = "Top", HorizontalAlignment = "Left", Padding = NewUDim(0, 5)})

                Window["Main Frame"] = Outline
                Window["Background"] = Background
                Window["Resize Button"] = ResizeButton

                Window["Tabs Holder"] = TabsHolder
                Window["Notifications Holder"] = NotifcationsHolder
            end


            -- Window Related Functions
            do
                function Window.CloseContent()
                    local CurrentContent = Window.CurrentContent

                    if CurrentContent then
                        CurrentContent.Close()

                        Window.CurrentContent = nil
                    end
                end

                function Window.Fade(NewVisible)
                    if Window.IsFading then
                        return
                    end

                    Window.CloseContent()

                    if Window.CurrentColorpicker then
                        Window.CurrentColorpicker.Close()
                    end

                    Window.IsFading = true

                    Window["Main Frame"].Visible = true

                    local Descendants = Menu.GetDescendants(Window["Main Frame"])

                    for i = 1, #Descendants do
                        local Descendant = Descendants[i]

                        local Cache = Window.Cache[Descendant] or {}
                        local TweenProps = {}
                        local Properties = {}

                        if IsA(Descendant, "TextLabel") or IsA(Descendant, "TextBox") or IsA(Descendant, "TextButton") then
                            Properties[#Properties + 1] = "TextTransparency"
                            Properties[#Properties + 1] = "BackgroundTransparency"
                        elseif IsA(Descendant, "ImageLabel") or IsA(Descendant, "ImageButton") then
                            Properties[#Properties + 1] = "BackgroundTransparency"
                            Properties[#Properties + 1] = "ImageTransparency"
                        elseif IsA(Descendant, "Frame") or IsA(Descendant, "ScrollingFrame") or IsA(Descendant, "ViewportFrame") then
                            Properties[#Properties + 1] = "BackgroundTransparency"

                            if IsA(Descendant, "ViewportFrame") then
                                Properties[#Properties + 1] = "ImageTransparency"
                            end

                            if IsA(Descendant, "ScrollingFrame") then
                                Properties[#Properties + 1] = "ScrollBarImageTransparency"
                            end
                        elseif IsA(Descendant, "UIStroke") then
                            Properties[#Properties + 1] = "Transparency"
                        end

                        for _, Prop in next, Properties do
                            Cache[Prop] = Cache[Prop] or Descendant[Prop]
                        end

                        for _, Prop in next, Properties do
                            if Cache[Prop] ~= 1 then
                                TweenProps[Prop] = NewVisible and Cache[Prop] or 1
                            end
                        end

                        if next(TweenProps) then
                            Menu.Tween(Descendant, NewTweenInfo(0.25, Enum.EasingStyle.Linear), TweenProps)
                        end

                        Window.Cache[Descendant] = Cache
                    end

                    if NewVisible then
                        Clear(Window.Cache)
                    end

                    Delay(0.25, function()
                        Window["Main Frame"].Visible = NewVisible

                        Window.IsFading = false
                        Window.IsVisible = NewVisible
                    end)
                end

                function Window.Find(Name)
                    for i = 1, #Window.Tabs do
                        local Tab = Window.Tabs[i]

                        if Tab.Name and Tab.Name == Name then
                            return Tab
                        end
                    end
                end
            end


            -- Window Creation Functions
            do
                function Window.CreateTab(Parameters)
                    Parameters = Parameters or {}

                    local Name = Parameters.Name or "Legit"
                    local Opened = Parameters.Opened or false


                    local Tab = {
                        Sections = {},
                        IsVisible = false,
                        Name = Name
                    }


                    -- Renders
                    do
                        local Frame = Menu.Draw("Frame", {Parent = Window["Tabs Holder"], Position = NewUDim2(0, 5 + (63 * #Window.Tabs), 0, 3), Size = NewUDim2(0, 59, 0, 16), BorderSizePixel = 0, BackgroundColor3 = Theme.White, BackgroundTransparency = 1})

                        Menu.Draw("UIGradient", {Parent = Frame, Color = NewColorSequence(NewRGB(69, 39, 67), NewRGB(24, 23, 24)), Rotation = -90})

                        local Accent = Menu.Draw("Frame", {Parent = Frame, Position = NewUDim2(0, 0, 1, 0), Size = NewUDim2(1, 0, 0, 1), BorderSizePixel = 0, BackgroundColor3 = NewRGB(21, 21, 21), BackgroundTransparency = 0})
                        local Accent2 = Menu.Draw("Frame", {Parent = Frame, Position = NewUDim2(0, 0, 1, 1), Size = NewUDim2(1, 0, 0, 1), BorderSizePixel = 0, BackgroundColor3 = NewRGB(47, 47, 47), BackgroundTransparency = 0})

                        local Label = Menu.Draw("TextLabel", {Parent = Frame, BackgroundTransparency = 1, AnchorPoint = NewVector2(0.5, 0.5), Position = NewUDim2(0.5, 0, 0.5, 0), Text = Name, TextStrokeTransparency = 0, TextColor3 = NewRGB(175, 175, 175)})
                        local Button = Menu.Draw("TextButton", {Parent = Frame, BackgroundTransparency = 1, Position = EmptyUDim2, Size = NewUDim2(1, 0, 1, 0), TextTransparency = 1, TextStrokeTransparency = 1})

                        local SectionsHolder = Menu.Draw("Frame", {Parent = Window.Background, Position = NewUDim2(0, 12, 0, 10), Size = NewUDim2(1, -24, 1, -53), BackgroundTransparency = 1, Visible = false})

                        local Left = Menu.Draw("Frame", { Parent = SectionsHolder, Position = NewUDim2(0, -6, 0, 0), Size = NewUDim2(0.5, 1, 1, 0), BackgroundTransparency = 1, BorderSizePixel = 0 })
                        local Right = Menu.Draw("Frame", { Parent = SectionsHolder, Position = NewUDim2(0.5, 6, 0, 0), Size = NewUDim2(0.5, 0, 1, 0), BackgroundTransparency = 1, BorderSizePixel = 0 })

                        Menu.Draw("UIListLayout", { Parent = Left, Padding = NewUDim(0, 11), FillDirection = "Vertical", HorizontalAlignment = "Left", VerticalAlignment = "Top" })
                        Menu.Draw("UIListLayout", { Parent = Right, Padding = NewUDim(0, 11), FillDirection = "Vertical", HorizontalAlignment = "Left", VerticalAlignment = "Top" })

                        Tab["Frame"] = Frame
                        Tab["Button"] = Button
                        Tab["Label"] = Label

                        Tab["Sections Holder"] = SectionsHolder
                        Tab["Left"] = Left
                        Tab["Right"] = Right

                        Tab["Accent1"] = Accent
                        Tab["Accent2"] = Accent2
                    end


                    -- Input & Connections
                    do
                        Connections[#Connections + 1] = Tab["Button"].MouseButton1Down:Connect(function()
                            Tab:Open()
                        end)

                        Connections[#Connections + 1] = Tab["Frame"].MouseEnter:Connect(function()
                            if not Tab.IsVisible then
                                Menu.Tween(Tab.Frame, NewTweenInfo(0.15, Enum.EasingStyle.Linear), { BackgroundTransparency = 0 })
                                Menu.Tween(Tab.Label, NewTweenInfo(0.15, Enum.EasingStyle.Linear), { TextColor3 = NewRGB(205, 205, 205) })

                                Menu.Tween(Tab.Accent1, NewTweenInfo(0.15, Enum.EasingStyle.Linear), { BackgroundColor3 = NewRGB(53, 34, 53) })
                                Menu.Tween(Tab.Accent2, NewTweenInfo(0.15, Enum.EasingStyle.Linear), { BackgroundColor3 = Theme.Accent })
                            end
                        end)

                        Connections[#Connections + 1] = Tab["Frame"].MouseLeave:Connect(function()
                            if not Tab.IsVisible then
                                Menu.Tween(Tab.Frame, NewTweenInfo(0.15, Enum.EasingStyle.Linear), { BackgroundTransparency = 1 })
                                Menu.Tween(Tab.Label, NewTweenInfo(0.15, Enum.EasingStyle.Linear), { TextColor3 = NewRGB(175, 175, 175) })

                                Menu.Tween(Tab.Accent1, NewTweenInfo(0.15, Enum.EasingStyle.Linear), { BackgroundColor3 = NewRGB(21, 21, 21) })
                                Menu.Tween(Tab.Accent2, NewTweenInfo(0.15, Enum.EasingStyle.Linear), { BackgroundColor3 = NewRGB(47, 47, 47) })
                            end
                        end)
                    end


                    SetMetaTable(Tab, Tabs)


                    if Opened then
                        Tab:Open()
                    end


                    Window.Tabs[#Window.Tabs + 1] = Tab

                    return Tab
                end

                function Window.Notify(Parameters)
                    Parameters = Parameters or {}


                    local Text = Parameters.Text or "bulge is so pasted - @theharvox"
                    local Time = Parameters.Time or 3
                    local Color = Parameters.Color or Theme.Accent


                    local Notification = {}


                    -- Renders
                    do
                        local TextBounds = Menu.GetTextBounds(Text, Fonts.Minecraftia)

                        local Outline = Menu.Draw("Frame", {Parent = Window["Notifications Holder"], BackgroundColor3 = Theme.A, BorderSizePixel = 0, Size = NewUDim2(0, TextBounds.X + 25, 0, 20)})

                        local Inline = Menu.Draw("Frame", {Parent = Outline, BackgroundColor3 = Theme.B, BorderSizePixel = 0, Size = NewUDim2(1, -2, 1, -2), Position = NewUDim2(0, 1, 0, 1)})

                        local Background = Menu.Draw("Frame", {Parent = Inline, BackgroundColor3 = Theme.White, BorderSizePixel = 0, Size = NewUDim2(1, -2, 1, -2), Position = NewUDim2(0, 1, 0, 1)})

                        Menu.Draw("UIGradient", {Parent = Background, Color = NewColorSequence(NewRGB(2, 2, 2), NewRGB(19, 19, 19)), Rotation = -90})

                        Menu.Draw("TextLabel", {Parent = Background, Text = Text, AnchorPoint = NewVector2(0.5, 0.5), Position = NewUDim2(0.5, 0, 0.5, -1), BackgroundTransparency = 1, BorderSizePixel = 0, TextStrokeTransparency = 0})

                        local VerticalBar = Menu.Draw("Frame", {Parent = Background, BackgroundColor3 = Color, BorderSizePixel = 0, Size = NewUDim2(0, 1, 0, 0), Position = EmptyUDim2})
                        local HortizontalBar = Menu.Draw("Frame", {Parent = Background, BackgroundColor3 = Color, BorderSizePixel = 0, Size = NewUDim2(0, 0, 0, 1), Position = NewUDim2(0, 0, 1, 0)})

                        Notification["Outline"] = Outline

                        Notification["VerticalBar"] = VerticalBar
                        Notification["HortizontalBar"] = HortizontalBar
                    end


                    -- Animations
                    do
                        local FirstTime = Time / 4
                        local SecondTime = Time - FirstTime

                        local Tween = Menu.Tween(Notification["VerticalBar"], NewTweenInfo(FirstTime, Enum.EasingStyle.Linear), { Size = NewUDim2(0, 1, 1, 0) })

                        Connections[#Connections + 1] = Tween.Completed:Connect(function()
                            Menu.Tween(Notification["HortizontalBar"], NewTweenInfo(SecondTime, Enum.EasingStyle.Linear), { Size = NewUDim2(1, 0, 0, 1) })
                        end)
                    end


                    Delay(Time, function()
                        local Outline = Notification.Outline

                        if Outline then
                            local Descendants = Menu.GetDescendants(Outline)

                            for i = 1, #Descendants do
                                local Descendant = Descendants[i]

                                if
                                    IsA(Descendant, "UIGradient") or
                                    IsA(Descendant, "UIStroke")
                                then
                                    continue
                                end

                                local Properties = { BackgroundTransparency = 1 }

                                if IsA(Descendant, "TextLabel") then
                                    Properties = { TextTransparency = 1 }
                                end

                                Menu.Tween(Descendant, NewTweenInfo(0.15, Enum.EasingStyle.Linear), Properties)
                            end

                            Delay(0.15, function()
                                Menu.Remove(Outline)
                            end)
                        end
                    end)


                    return Notification
                end
            end


            -- Tabs Functions
            do
                function Tabs:Open()
                    local Tab = self
                    local CurrentTab = Window.CurrentTab

                    if CurrentTab == Tab then return end

                    Window.CloseContent()

                    if Window.CurrentColorpicker then
                        Window.CurrentColorpicker.Close()
                    end

                    if CurrentTab then
                        Menu.Tween(CurrentTab.Frame, NewTweenInfo(0.15, Enum.EasingStyle.Linear), { BackgroundTransparency = 1 })
                        Menu.Tween(CurrentTab.Label, NewTweenInfo(0.15, Enum.EasingStyle.Linear), { TextColor3 = NewRGB(175, 175, 175) })

                        Menu.Tween(CurrentTab.Accent1, NewTweenInfo(0.15, Enum.EasingStyle.Linear), { BackgroundColor3 = NewRGB(21, 21, 21) })
                        Menu.Tween(CurrentTab.Accent2, NewTweenInfo(0.15, Enum.EasingStyle.Linear), { BackgroundColor3 = NewRGB(47, 47, 47) })

                        CurrentTab["Sections Holder"].Visible = false
                        CurrentTab.IsVisible = false
                    end

                    if CurrentTab then
                        Menu.Tween(Tab.Frame, NewTweenInfo(0.15, Enum.EasingStyle.Linear), { BackgroundTransparency = 0 })
                        Menu.Tween(Tab.Label, NewTweenInfo(0.15, Enum.EasingStyle.Linear), { TextColor3 = Theme.White })

                        Menu.Tween(Tab.Accent1, NewTweenInfo(0.15, Enum.EasingStyle.Linear), { BackgroundColor3 = NewRGB(49, 30, 48) })
                        Menu.Tween(Tab.Accent2, NewTweenInfo(0.15, Enum.EasingStyle.Linear), { BackgroundColor3 = Theme.Accent })
                    else
                        Tab.Frame.BackgroundTransparency = 0
                        Tab.Label.TextColor3 = Theme.White

                        Tab.Accent1.BackgroundColor3 = NewRGB(49, 30, 48)
                        Tab.Accent2.BackgroundColor3 = Theme.Accent
                    end

                    Tab["Sections Holder"].Visible = true
                    Tab.IsVisible = true

                    Window.CurrentTab = Tab
                end

                function Tabs:Find(Name)
                    local Tab = self
                    local TabSections = Tab.Sections

                    for i = 1, #TabSections do
                        local Section = TabSections[i]

                        if Section.Name == Name then
                            return Section, i
                        end
                    end
                end

                function Tabs:Section(Parameters)
                    Parameters = Parameters or {}

                    local Tab = self

                    local Name = Parameters.Name or "Target Selection"
                    local Side = Parameters.Side or "Left"
                    local Size = Parameters.Size or 196
                    local Fill = Parameters.Fill or false


                    local Section = {
                        Offset = 10,
                        Name = Name
                    }


                    -- Renders
                    do
                        local TabFrame = Tab[Side]

                        local Outline = Menu.Draw("Frame", { Parent = TabFrame, Size = NewUDim2(1, 0, 0, Fill and TabFrame.AbsoluteSize.Y or Size), BackgroundColor3 = Theme.B, BorderColor3 = Theme.C })

                        local Inline = Menu.Draw("ScrollingFrame", { Parent = Outline, Size = NewUDim2(1, 0, 1, 0), BorderSizePixel = 0, BackgroundColor3 = Theme.B, ScrollingEnabled = false, CanvasSize = EmptyUDim2, ScrollBarThickness = 1, VerticalScrollBarInset = "ScrollBar", ClipsDescendants = true, ScrollBarImageColor3 = Theme.Accent, MidImage = "rbxassetid://7783554086", TopImage = "rbxassetid://7783554086", BottomImage = "rbxassetid://7783554086" })

                        local Gradient = Menu.Draw("Frame", { Parent = Outline, Size = NewUDim2(1, -2, 0, 15), BackgroundColor3 = Theme.B, BorderSizePixel = 0, ZIndex = 20000, Visible = false })
                        local Gradient2 = Menu.Draw("Frame", { Parent = Outline, Position = NewUDim2(0, 0, 1, -10), Size = NewUDim2(1, -2, 0, 10), BackgroundColor3 = Theme.B, BorderSizePixel = 0, ZIndex = 20000, Visible = false })

                        Menu.Draw("TextLabel", { Parent = Outline, Position = NewUDim2(0, 7, 0, 0), Text = Name, TextXAlignment = "Left", TextStrokeTransparency = 0, ZIndex = 20001 })

                        Menu.Draw("UIGradient", { Parent = Gradient, Transparency = NewNumberSequence({ NewNumberKeypoint(0, 0, 0), NewNumberKeypoint(1, 1, 0) }), Rotation = 90 })
                        Menu.Draw("UIGradient", { Parent = Gradient2, Transparency = NewNumberSequence({ NewNumberKeypoint(0, 0, 0), NewNumberKeypoint(1, 1, 0) }), Rotation = -90 })

                        Section["Frame"] = Inline

                        Section["Gradient"] = Gradient
                        Section["Gradient 2"] = Gradient2
                    end


                    SetMetaTable(Section, Sections)

                    Tab.Sections[#Tab.Sections + 1] = Section

                    return Section
                end
            end


            -- Sections Functions
            do
                function Sections:Update()
                    local Section = self

                    local Frame = Section["Frame"]

                    local Offset = Section.Offset - 1
                    local Difference = Offset - Frame.AbsoluteSize.Y
                    local CanUpdate = Difference > 0

                    Frame.ScrollingEnabled = CanUpdate
                    Frame.CanvasSize = NewUDim2(0, 0, 0, CanUpdate and Offset or 0)

                    Section["Gradient"].Visible = CanUpdate
                    Section["Gradient 2"].Visible = CanUpdate
                end

                function Sections:Toggle(Parameters)
                    Parameters = Parameters or {}

                    local Section = self

                    local Name = Parameters.Name or "Enabled"
                    local Default = Parameters.Default or false
                    local Risky = Parameters.Risky or false
                    local Callback = Parameters.Callback or EmptyFunction
                    local Flag = Parameters.Flag


                    local Toggle = {
                        Value = Default,

                        Colorpickers = {}
                    }


                    -- Renders
                    do
                        local Frame = Menu.Draw("Frame", { Parent = Section.Frame, Position = NewUDim2(0, 0, 0, Section.Offset), Size = NewUDim2(1, 0, 0, 8), BackgroundTransparency = 1, BorderSizePixel = 0 })

                        local Box = Menu.Draw("Frame", { Parent = Frame, Position = NewUDim2(0, 6, 0, 1), Size = NewUDim2(0, 9, 0, 9), BackgroundColor3 = Theme.White, BorderSizePixel = 0 })

                        local Button = Menu.Draw("TextButton", { Parent = Frame, Position = NewUDim2(0, -1, 0, -1), Size = NewUDim2(1, 3, 1, 2), BackgroundTransparency = 1, BorderSizePixel = 0, Text = "" })

                        local Label = Menu.Draw("TextLabel", { Parent = Frame, Position = NewUDim2(0, 19, 0, 6), TextColor3 = not Risky and NewRGB(175, 175, 175) or NewRGB(255, 0, 0), BackgroundTransparency = 1, TextXAlignment = "Left", Text = Name, TextStrokeTransparency = 0 })

                        local Gradient = Menu.Draw("UIGradient", { Parent = Box, Color = NewColorSequence(NewRGB(22, 22, 22), Theme.E), Rotation = 90 })
                        Menu.Draw("UIStroke", { Parent = Box })

                        Toggle["Frame"] = Frame
                        Toggle["Box"] = Box
                        Toggle["Gradient"] = Gradient

                        Toggle["Button"] = Button
                        Toggle["Label"] = Label
                    end


                    -- Functions
                    do
                        function Toggle.Get()
                            return Toggle.Value
                        end

                        function Toggle.Set(Boolean)
                            if Toggle.Bind and Toggle.Bind.Mode == "Always" and Boolean == false then return end

                            Toggle.Value = Boolean

                            Toggle.Gradient.Color = Boolean and NewColorSequence(NewRGB(203, 96, 197), NewRGB(105, 50, 102)) or NewColorSequence(NewRGB(22, 22, 22), Theme.E)

                            if not Risky then
                                Toggle.Label.TextColor3 = Boolean and Fonts.Minecraftia.TextColor3 or NewRGB(175, 175, 175)
                            end

                            Callback(Boolean)
                        end
                    end


                    -- Input & Connections
                    do
                        Connections[#Connections + 1] = Toggle["Button"].MouseButton1Down:Connect(function()
                            Toggle.Set(not Toggle.Value)
                        end)

                        Connections[#Connections + 1] = Toggle["Button"].MouseEnter:Connect(function()
                            if not Toggle.Value and not Risky then
                                Menu.Tween(Toggle.Label, NewTweenInfo(0.15, Enum.EasingStyle.Linear), { TextColor3 = NewRGB(225, 225, 225) })
                            end
                        end)

                        Connections[#Connections + 1] = Toggle["Button"].MouseLeave:Connect(function()
                            if not Toggle.Value and not Risky then
                                Menu.Tween(Toggle.Label, NewTweenInfo(0.15, Enum.EasingStyle.Linear), { TextColor3 = NewRGB(175, 175, 175) })
                            end
                        end)
                    end


                    Toggle.Set(Default)


                    if Flag then
                        Flags[Flag] = Toggle
                    end

                    SetMetaTable(Toggle, Elements)


                    Section.Offset += 16

                    Section:Update()

                    return Toggle
                end

                function Sections:Dropdown(Parameters)
                    Parameters = Parameters or {}

                    local Section = self

                    local Name = Parameters.Name or "Origin"
                    local Options = Parameters.Options or { "Mouse", "Camera", "Character" }
                    local Default = Parameters.Default or (typeof(Options) == "table" and { Options[1] } or Options[1])
                    local Min = Parameters.Min or 0
                    local MultiChoice = typeof(Default) == "table"
                    local Callback = Parameters.Callback or EmptyFunction
                    local Flag = Parameters.Flag


                    local Dropdown = {
                        Values = {},
                        IsOpen = false,

                        Value = Default,
                        Options = Options,
                        MultiChoice = MultiChoice,

                        Colorpickers = {},
                        Section = Section
                    }


                    -- Renders
                    do
                        local Frame = Menu.Draw("Frame", {Parent = Section.Frame, Position = NewUDim2(0, 0, 0, Section.Offset), Size = NewUDim2(1, 0, 0, 32), BackgroundTransparency = 1, BorderSizePixel = 0})

                        local Outline = Menu.Draw("Frame", {Parent = Frame, Position = NewUDim2(0, 5, 0, 12), Size = NewUDim2(1, -10, 0, 18), BackgroundColor3 = Theme.A, BorderSizePixel = 0})

                        Menu.Draw("TextLabel", {Parent = Outline, Position = NewUDim2(0, 3, 0, -7), Text = Name, TextXAlignment = "Left", TextStrokeTransparency = 0})

                        local Inline = Menu.Draw("Frame", {Parent = Outline, Position = NewUDim2(0, 1, 0, 1), Size = NewUDim2(1, -2, 1, -2), BackgroundColor3 = Theme.White, BorderSizePixel = 0})

                        Menu.Draw("UIGradient", {Parent = Inline, Color = NewColorSequence(NewRGB(15, 15, 15), NewRGB(23, 23, 23)), Rotation = -90})

                        local Button = Menu.Draw("TextButton", {Parent = Outline, Size = NewUDim2(1, 0, 1, 0), Position = EmptyUDim2, BackgroundTransparency = 1, Text = ""})

                        local Value = Menu.Draw("TextLabel", {Parent = Inline, AnchorPoint = NewVector2(0, 0.5), Position = NewUDim2(0, 4, 0.5, 0), Size = NewUDim2(1, -6, 1, -4), TextTruncate = "AtEnd", TextXAlignment = "Left", Text = MultiChoice and (#Dropdown.Value > 0 and Concat(Dropdown.Value, ", ") or "...") or (Dropdown.Value and Dropdown.Value) or "...", TextStrokeTransparency = 0})
                        local Icon = Menu.Draw("TextLabel", {Parent = Inline, AnchorPoint = NewVector2(0, 0.5), Position = NewUDim2(1, -8, 0.5, 0),  BackgroundTransparency = 1, TextStrokeTransparency = 0, Text = "+"})

                        local HoverFrame = Menu.Draw("Frame", { Parent = Inline, BackgroundTransparency = 1, BorderSizePixel = 0, Size = NewUDim2(1, 0, 1, 0), BackgroundColor3 = NewRGB(161, 161, 161), Position = EmptyUDim2 })

                        Dropdown["Frame"] = Frame
                        Dropdown["Outline"] = Outline
                        Dropdown["HoverFrame"] = HoverFrame

                        Dropdown["Button"] = Button
                        Dropdown["DropdownValue"] = Value
                        Dropdown["Icon"] = Icon
                    end


                    -- Functions
                    do
                        function Dropdown.Get()
                            return Dropdown.Value
                        end

                        function Dropdown.Set(Value)
                            if typeof(Value) == "table" then
                                for i = #Value, 1, -1 do
                                    if not Find(Dropdown.Options, Value[i]) then
                                        Remove(Value, i)
                                    end
                                end
                            else
                                if not Find(Dropdown.Options, Value) then return end
                            end

                            if typeof(Value) == "table" and not MultiChoice then
                                Dropdown.Value = Value[1]
                            else
                                Dropdown.Value = Value
                            end

                            Dropdown["DropdownValue"].Text = MultiChoice and (#Dropdown.Value > 0 and Concat(Dropdown.Value, ", ") or "...") or (Dropdown.Value and Dropdown.Value) or "..."

                            Callback(Value)
                        end

                        function Dropdown.Refresh(Value)
                            if MultiChoice then
                                local Found = Find(Dropdown.Value, Value)
                                local Amount = #Dropdown.Value

                                if Found then
                                    if Amount > Min then
                                        Remove(Dropdown.Value, Found)
                                    end
                                else
                                    Dropdown.Value[Amount + 1] = Value
                                end
                            else
                                if Dropdown.Value == Value then
                                    if Min < 1 then
                                        Dropdown.Value = nil
                                    end
                                else
                                    Dropdown.Value = Value
                                end
                            end

                            for i = 1, #Dropdown.Options do
                                Dropdown.Values[i].TextColor3 = (MultiChoice and Find(Dropdown.Value, Dropdown.Options[i]) or Dropdown.Value == Dropdown.Options[i]) and Theme.Accent or NewRGB(205, 205, 205)
                            end

                            Dropdown["DropdownValue"].Text = MultiChoice and (#Dropdown.Value > 0 and Concat(Dropdown.Value, ", ") or "...") or (Dropdown.Value and Dropdown.Value) or "..."

                            Callback(Dropdown.Value)
                        end

                        function Dropdown.Open()
                            if Dropdown.IsOpen then
                                Dropdown.Close()
                                return
                            end

                            Window.CloseContent()
                            Window.CurrentContent = Dropdown

                            Dropdown.IsOpen = true

                            Dropdown.Icon.Text = "-"


                            -- Renders
                            do
                                local AbsolutePosition = Dropdown.Outline.AbsolutePosition

                                local Frame = Menu.Draw("Frame", {Parent = Menu.Overlay, ZIndex = 30000, Position = NewUDim2(0, AbsolutePosition.X + 1, 0, AbsolutePosition.Y + 21), Size = NewUDim2(0, Dropdown.Outline.AbsoluteSize.X, 0, 0), BackgroundColor3 = Theme.A, BackgroundTransparency = 1, BorderSizePixel = 0})
                                local Inner = Menu.Draw("Frame", {Parent = Frame, ZIndex = Frame.ZIndex + 1, Position = NewUDim2(0, 1, 0, 1), Size = NewUDim2(1, -2, 1, -2), BackgroundColor3 = Theme.White, BorderSizePixel = 0, ClipsDescendants = true})

                                Menu.Draw("UIGradient", {Parent = Inner, Color = NewColorSequence(NewRGB(15, 15, 15), NewRGB(23, 23, 23)), Rotation = -90})

                                Menu.Draw("UIListLayout", { Parent = Inner, Padding = NewUDim(0, 1), FillDirection = "Vertical", VerticalFlex = "Fill", ItemLineAlignment = "Center" })

                                Dropdown["Outer"] = Frame
                                Dropdown["Inner"] = Inner
                            end


                            -- Input & Connections
                            do
                                local Frame = Dropdown.Outline
                                local Outline = Dropdown.Outer
                                local Inline = Dropdown.Inner

                                Connections[#Connections + 1] = Outline:GetPropertyChangedSignal("BackgroundTransparency"):Connect(function()
                                    Inline.BackgroundTransparency = Outline.BackgroundTransparency
                                end)

                                local Connection = Frame:GetPropertyChangedSignal("AbsolutePosition"):Connect(function()
                                    local AbsolutePosition = Frame.AbsolutePosition
                                    local AbsoluteY = AbsolutePosition.Y

                                    Outline.Position = NewUDim2(0, AbsolutePosition.X, 0, AbsoluteY + 21)

                                    if AbsoluteY < Section.Frame.AbsolutePosition.Y then
                                        Dropdown.Close()
                                    end
                                end)

                                Connections[#Connections + 1] = Connection

                                Dropdown.Connection = Connection
                            end


                            -- Options
                            do
                                for i = 1, #Dropdown.Options do
                                    local Option = Dropdown.Options[i]

                                    local Frame2 = Menu.Draw("TextButton", {Parent = Dropdown.Inner, ZIndex = Dropdown.Inner.ZIndex + 1, Position = EmptyUDim2, Size = NewUDim2(1, 0, 0, 0), BackgroundColor3 = NewRGB(30, 30, 30), BorderSizePixel = 0, Text = "", BackgroundTransparency = 1, AutomaticSize = "Y"})

                                    local Value = Menu.Draw("TextLabel", {Parent = Frame2, ZIndex = Frame2.ZIndex + 1, AnchorPoint = NewVector2(0, 0.5), Position = NewUDim2(0, 4, 0.5, 0), Size = NewUDim2(1, -25, 1, 0), TextTruncate = "AtEnd", TextColor3 = (MultiChoice and Find(Dropdown.Value, Option) and Theme.Accent) or (Dropdown.Value == Option and Theme.Accent) or NewRGB(205, 205, 205), TextXAlignment = "Left", Text = Option, BackgroundTransparency = 1, TextTransparency = 1})

                                    Connections[#Connections + 1] = Frame2.MouseButton1Down:Connect(function()
                                        Dropdown.Refresh(Option)
                                    end)

                                    Connections[#Connections + 1] = Frame2.MouseEnter:Connect(function()
                                        Menu.Tween(Frame2, NewTweenInfo(0.15, Enum.EasingStyle.Linear), { BackgroundTransparency = 0.3 })
                                    end)

                                    Connections[#Connections + 1] = Frame2.MouseLeave:Connect(function()
                                        Menu.Tween(Frame2, NewTweenInfo(0.15, Enum.EasingStyle.Linear), { BackgroundTransparency = 1 })
                                    end)

                                    Dropdown.Values[#Dropdown.Values + 1] = Value
                                end
                            end


                            -- Animations
                            do
                                local Descendants = Menu.GetDescendants(Dropdown.Outer)

                                for i = 1, #Descendants do
                                    local Descendant = Descendants[i]

                                    if
                                        IsA(Descendant, "UIGradient") or
                                        IsA(Descendant, "TextButton") or
                                        IsA(Descendant, "UIListLayout") or
                                        Descendant == Dropdown.Inner
                                    then
                                        continue
                                    end

                                    if not IsA(Descendant, "TextLabel") then
                                        if Descendant == Dropdown.Outer then
                                            Menu.Tween(Descendant, NewTweenInfo(0.08, Enum.EasingStyle.Linear), { Size = NewUDim2(0, Descendant.AbsoluteSize.X, 0, (18 * #Dropdown.Options)) })
                                        end

                                        Menu.Tween(Descendant, NewTweenInfo(0.08, Enum.EasingStyle.Linear), { BackgroundTransparency = 0 })
                                    else
                                        Menu.Tween(Descendant, NewTweenInfo(0.08, Enum.EasingStyle.Linear), { TextTransparency = 0 })
                                    end
                                end
                            end


                            Dropdown.OpenFrame = Dropdown["Outer"]
                        end

                        function Dropdown.Close()
                            if not Dropdown.IsOpen then return end

                            Window.CurrentContent = nil
                            Dropdown.IsOpen = false

                            Dropdown.Icon.Text = "+"


                            if Dropdown.Connection then
                                Dropdown.Connection:Disconnect()
                                Dropdown.Connection = nil
                            end


                            -- Animations
                            do
                                local Descendants = Menu.GetDescendants(Dropdown.Outer)

                                for i = 1, #Descendants do
                                    local Descendant = Descendants[i]

                                    if
                                        IsA(Descendant, "UIGradient") or
                                        IsA(Descendant, "TextButton") or
                                        IsA(Descendant, "UIListLayout") or
                                        Descendant == Dropdown.Inner
                                    then
                                        continue
                                    end

                                    if not IsA(Descendant, "TextLabel") then
                                        Menu.Tween(Descendant, NewTweenInfo(0.08, Enum.EasingStyle.Linear), { Size = NewUDim2(0, Descendant.AbsoluteSize.X, 0, 0) })

                                        Menu.Tween(Descendant, NewTweenInfo(0.08, Enum.EasingStyle.Linear), { BackgroundTransparency = 1 })
                                    else
                                        Menu.Tween(Descendant, NewTweenInfo(0.08, Enum.EasingStyle.Linear), { TextTransparency = 1 })
                                    end
                                end
                            end


                            Delay(0.08, function()
                                Clear(Dropdown.Values)

                                Menu.Remove(Dropdown.OpenFrame)
                            end)
                        end
                    end


                    -- Inputs & Connections
                    do
                        Connections[#Connections + 1] = Dropdown["Button"].MouseButton1Down:Connect(function()
                            Dropdown.Open()
                        end)

                        Connections[#Connections + 1] = Dropdown["HoverFrame"].MouseEnter:Connect(function()
                            Menu.Tween(Dropdown["HoverFrame"], NewTweenInfo(0.15, Enum.EasingStyle.Linear), { BackgroundTransparency = 0.95 })
                        end)

                        Connections[#Connections + 1] = Dropdown["HoverFrame"].MouseLeave:Connect(function()
                            Menu.Tween(Dropdown["HoverFrame"], NewTweenInfo(0.15, Enum.EasingStyle.Linear), { BackgroundTransparency = 1 })
                        end)
                    end


                    if Flag then
                        Flags[Flag] = Dropdown
                    end


                    SetMetaTable(Dropdown, Elements)


                    Section.Offset += 37

                    Section:Update()

                    return Dropdown
                end

                function Sections:Slider(Parameters)
                    Parameters = Parameters or {}

                    local Section = self

                    local Name = Parameters.Name or ""
                    local Min = Parameters.Min or 0
                    local Max = Parameters.Max or 100
                    local Default = Parameters.Default or 50
                    local Prefix = Parameters.Prefix or ""
                    local Decimals = Parameters.Decimals or 1
                    local Callback = Parameters.Callback or EmptyFunction
                    local Specials = Parameters.Specials or false
                    local Risky = Parameters.Risky or false
                    local Flag = Parameters.Flag

                    local IsNamed = (Name ~= "")

                    Default = Clamp(Default, Min, Max)
                    Decimals = 1 / Decimals

                    local Slider = {
                        Decimals = Decimals,
                        Prefix = Prefix,
                        Value = Default,
                        Min = Min,
                        Max = Max,

                        Colorpickers = {},
                        Section = Section
                    }


                    -- Renders
                    do
                        local Frame = Menu.Draw("Frame", {Parent = Section.Frame, Position = NewUDim2(0, 0, 0, Section.Offset), Size = NewUDim2(1, 0, 0, 31), BackgroundTransparency = 1, BorderSizePixel = 0})

                        local Button = Menu.Draw("ImageButton", {Parent = Frame, Position = NewUDim2(0, 6, 0, IsNamed and 12 or -1), Size = NewUDim2(1, -12, 0, 7), BackgroundColor3 = NewRGB(29, 29, 29), BorderColor3 = Theme.A, Image = Images["Down Gradient"], ImageTransparency = 0.4})

                        local Button2 = Menu.Draw("ImageButton", {Parent = Button, Position = EmptyUDim2, Size = NewUDim2((Slider.Value - Slider.Min) / (Slider.Max - Slider.Min), 0, 1, 0), Image = Images.Gradient, ImageTransparency = 0.1, BackgroundColor3 = Theme.Accent, BorderSizePixel = 0, Interactable = false})

                        local Value = Menu.Draw("TextLabel", {Parent = Button, AnchorPoint = NewVector2(0.5, 0.5), Position = NewUDim2(0.5, 0, 0.5, 0), TextStrokeTransparency = 0, TextColor3 = NewRGB(175, 175, 175), Text = Specials and Specials[2] == Slider.Value and Specials[1] or Slider.Value .. Slider.Prefix, FontFace = Fonts["Verdana Bold"]})

                        local HoverFrame = Menu.Draw("Frame", { Parent = Button, BackgroundTransparency = 1, BorderSizePixel = 0, Size = NewUDim2(1, 0, 1, 0), BackgroundColor3 = NewRGB(161, 161, 161), Position = EmptyUDim2 })

                        Menu.Draw("TextLabel", {Parent = Button, Position = NewUDim2(0, 0, 0, -7), Text = Name, TextColor3 = Risky and Theme.Risky or Fonts.Minecraftia.TextColor3, TextXAlignment = "Left", TextStrokeTransparency = 0})

                        Slider["Frame"] = Frame
                        Slider["TextValue"] = Value
                        Slider["HoverFrame"] = HoverFrame

                        Slider["Button"] = Button
                        Slider["Button2"] = Button2
                    end


                    -- Functions
                    do
                        function Slider.Get()
                            return Slider.Value
                        end

                        function Slider.Set(Value)
                            local OldValue = Slider.Value
                            Slider.Value = Clamp(Round(Value * Slider.Decimals) / Slider.Decimals, Slider.Min, Slider.Max)

                            if Slider.Value ~= OldValue then
                                local Special = false

                                if Specials then
                                    local Value = Specials[2]

                                    if Slider.Value == Value then
                                        Special = Specials[1]
                                    end
                                end

                                Menu.Tween(Slider["Button2"], NewTweenInfo(0.1, Enum.EasingStyle.Linear), { Size = NewUDim2(((Slider.Value - Slider.Min) / (Slider.Max - Slider.Min)), 0, 1, 0) })

                                Slider["TextValue"].Text = Special or Slider.Value .. Slider.Prefix

                                Callback(Slider.Value)
                            end
                        end

                        function Slider.Refresh()
                            local X = Slider["Button"].AbsoluteSize.X
                            local Percent = Clamp(Mouse.X - Slider["Button2"].AbsolutePosition.X, 0, X) / X
                            local Value = Round((Slider.Min + (Slider.Max - Slider.Min) * Percent) * Slider.Decimals) / Slider.Decimals
                            Value = Clamp(Value, Slider.Min, Slider.Max)
                            Slider.Set(Value)
                        end
                    end


                    -- Inputs & Connections
                    do
                        local MoveConnection
                        local ReleaseConnection

                        Connections[#Connections + 1] = Slider["Button"].MouseButton1Down:Connect(function()
                            Slider.Refresh()

                            MoveConnection = Mouse.Move:Connect(Slider.Refresh)
                            ReleaseConnection = UserInputService.InputEnded:Connect(function(Input)
                                if Input.UserInputType == Enum.UserInputType.MouseButton1 then
                                    Slider.Refresh()

                                    MoveConnection:Disconnect()
                                    MoveConnection = nil
                                    ReleaseConnection:Disconnect()
                                    ReleaseConnection = nil
                                end
                            end)

                            Connections[#Connections + 1] = MoveConnection
                            Connections[#Connections + 1] = ReleaseConnection
                        end)

                        Connections[#Connections + 1] = Slider["HoverFrame"].MouseEnter:Connect(function()
                            Menu.Tween(Slider["HoverFrame"], NewTweenInfo(0.15, Enum.EasingStyle.Linear), { BackgroundTransparency = 0.95 })
                        end)

                        Connections[#Connections + 1] = Slider["HoverFrame"].MouseLeave:Connect(function()
                            Menu.Tween(Slider["HoverFrame"], NewTweenInfo(0.15, Enum.EasingStyle.Linear), { BackgroundTransparency = 1 })
                        end)
                    end


                    if Flag then
                        Flags[Flag] = Slider
                    end

                    SetMetaTable(Slider, Elements)


                    Section.Offset += (IsNamed and 25 or 13)

                    Section:Update()

                    return Slider
                end

                function Sections:TextBox(Parameters)
                    Parameters = Parameters or {}

                    local Section = self

                    local PlaceholderText = Parameters.Placeholder or "Deadcell"
                    local Default = (Parameters.Default and Parameters.Default) or (Parameters.Placeholder and PlaceholderText) or "Harvox"
                    local ResetText = Parameters.ResetText or Default
                    local Callback = Parameters.Callback or EmptyFunction
                    local ClearText = Parameters.ResetOnSubmit or false
                    local Flag = Parameters.Flag

                    local TextBox = {
                        OldValue = Default,
                        Value = Default,

                        Colorpickers = {},
                        Section = Section
                    }


                    -- Renders
                    do
                        local Outline = Menu.Draw("Frame", {Parent = Section.Frame, Position = NewUDim2(0, 5, 0, Section.Offset), Size = NewUDim2(1, -10, 0, 16), BackgroundColor3 = Theme.A, BorderSizePixel = 0})

                        local Inline = Menu.Draw("Frame", {Parent = Outline, Position = NewUDim2(0, 1, 0, 1), Size = NewUDim2(1, -2, 1, -2), BackgroundColor3 = Theme.White, BorderSizePixel = 0})

                        local Box = Menu.Draw("TextBox", {Parent = Inline, Position = EmptyUDim2, Size = NewUDim2(1, 0, 1, 0), BackgroundTransparency = 1, BorderSizePixel = 0, PlaceholderText = PlaceholderText, Text = Default, ClipsDescendants = true})

                        Menu.Draw("UIGradient", {Parent = Inline, Color = NewColorSequence(NewRGB(15, 15, 15), NewRGB(23, 23, 23)), Rotation = -90})

                        TextBox["Frame"] = Outline
                        TextBox["Box"] = Box
                    end


                    -- Functions
                    do
                        function TextBox.Get()
                            return TextBox.Value
                        end

                        function TextBox.Set(String)
                            TextBox["Box"].Text = String
                            TextBox.Value = String
                            Callback(String)
                        end
                    end


                    -- Input & Connections
                    do
                        Connections[#Connections + 1] = TextBox["Box"].Focused:Connect(function()
                            TextBox["Box"].TextColor3 = Theme.Accent

                            TextBox.OldValue = TextBox["Box"].Text
                        end)

                        Connections[#Connections + 1] = TextBox["Box"].FocusLost:Connect(function(Submitted)
                            TextBox["Box"].TextColor3 = Theme.White

                            if Submitted then
                                local String = TextBox["Box"].Text

                                if ClearText then
                                    TextBox.Value = ResetText

                                    TextBox["Box"].TextColor3 = Theme.Accent
                                    TextBox["Box"].Text = ResetText

                                    Delay(0.35, function()
                                        TextBox["Box"].TextColor3 = NewRGB(205, 205, 205)
                                        TextBox["Box"].Text = Default
                                    end)
                                else
                                    TextBox.Value = String
                                end

                                Callback(String)
                            else
                                TextBox["Box"].Text = ClearText and Default or TextBox.OldValue
                            end
                        end)
                    end


                    if Flag then
                        Flags[Flag] = TextBox
                    end

                    SetMetaTable(TextBox, Elements)


                    Section.Offset += 21

                    Section:Update()

                    return TextBox
                end

                function Sections:Button(Parameters)
                    Parameters = Parameters or {}

                    local Section = self

                    local Name = Parameters.Name or "Button"
                    local Confirm = Parameters.Confirm or false
                    local PassedCallback = Parameters.Callback or EmptyFunction
                    local CallbackText = Parameters.CallbackText
                    local Flag = Parameters.Flag


                    local Button = {
                        Confirmable = false,

                        Colorpickers = {}
                    }

                    local Callback = function(...)
                        if typeof(CallbackText) == "string" then
                            Button.Text.Text = CallbackText
                        end

                        Button.Gradient.Color = NewColorSequence(NewRGB(49, 30, 48), NewRGB(187, 92, 194))

                        Delay(0.15, function()
                            Button.Text.Text = Name

                            Button.Gradient.Color = NewColorSequence(NewRGB(15, 15, 15), NewRGB(23, 23, 23))
                        end)

                        PassedCallback(...)
                    end


                    -- Renders
                    do
                        local Outline = Menu.Draw("Frame", {Parent = Section.Frame, Position = NewUDim2(0, 5, 0, Section.Offset), Size = NewUDim2(1, -10, 0, 16), BackgroundColor3 = Theme.A, BorderSizePixel = 0})

                        local Inline = Menu.Draw("Frame", {Parent = Outline, Position = NewUDim2(0, 1, 0, 1), Size = NewUDim2(1, -2, 1, -2), BackgroundColor3 = Theme.White, BorderSizePixel = 0})

                        local TextButton = Menu.Draw("TextButton", {Parent = Outline, Position = EmptyUDim2, Size = NewUDim2(1, 0, 1, 0), BackgroundTransparency = 1, Text = ""})

                        local Text = Menu.Draw("TextLabel", {Parent = Inline, AnchorPoint = NewVector2(0.5, 0.5), Position = NewUDim2(0.5, 0, 0.5, 0), Text = Name, TextStrokeTransparency = 0})

                        local Gradient = Menu.Draw("UIGradient", {Parent = Inline, Color = NewColorSequence(NewRGB(15, 15, 15), NewRGB(23, 23, 23)), Rotation = -90})

                        Button["Frame"] = Outline
                        Button["Gradient"] = Gradient

                        Button["Button"] = TextButton
                        Button["Text"] = Text
                    end


                    -- Functions
                    do
                        function Button.Set(Value)
                            Name = Value
                            Parameters.Name = Value

                            Button.Text.Text = Value
                        end
                        function Button.Get() end

                        function Button.Activate()
                            if Confirm then
                                if Button.Confirmable then
                                    Callback()

                                    Cancel(Button.Task)

                                    Button.Confirmable = false
                                    Button.Text.TextColor3 = NewRGB(205, 205, 205)
                                    Button.Text.Text = Name
                                else
                                    Button.Task = Spawn(function()
                                        for i = 3.00, 0, -0.1 do
                                            Button.Text.Text = Format("Confirm? [%.1f]", i)
                                            Button.Text.TextColor3 = Theme.Accent

                                            Button.Confirmable = true
                                            Wait(0.1)
                                        end

                                        Button.Confirmable = false
                                        Button.Text.TextColor3 = NewRGB(205, 205, 205)
                                        Button.Text.Text = Name
                                    end)
                                end
                            else
                                Callback()
                            end
                        end
                    end


                    -- Input & Connections
                    do
                        Connections[#Connections + 1] = Button["Button"].MouseButton1Down:Connect(Button.Activate)

                        Connections[#Connections + 1] = Button["Frame"].MouseEnter:Connect(function()
                            Menu.Tween(Button.Frame, NewTweenInfo(0.15, Enum.EasingStyle.Linear), { BackgroundColor3 = Theme.Accent })
                        end)

                        Connections[#Connections + 1] = Button["Frame"].MouseLeave:Connect(function()
                            Menu.Tween(Button.Frame, NewTweenInfo(0.15, Enum.EasingStyle.Linear), { BackgroundColor3 = Theme.A })
                        end)
                    end


                    if Flag then
                        Flags[Flag] = Button
                    end

                    SetMetaTable(Button, Elements)


                    Section.Offset += 21

                    Section:Update()

                    return Button
                end

                function Sections:DoubleButton(Parameters)
                    Parameters = Parameters or {}

                    local Section = self

                    local Names = typeof(Parameters.Name) == "table" and Parameters.Name or { Parameters.Name }
                    local Confirms = typeof(Parameters.Confirm) == "table" and Parameters.Confirm or { Parameters.Confirm }
                    local PassedCallbacks = typeof(Parameters.Callback) == "table" and Parameters.Callback or { Parameters.Callback }
                    local CallbackTexts = typeof(Parameters.CallbackText) == "table" and Parameters.CallbackText or { Parameters.CallbackText }
                    local PFlags = typeof(Parameters.Flag) == "table" and Parameters.Flag or { Parameters.Flag }


                    local DoubleButton = {
                        Buttons = {},
                        Colorpickers = {}
                    }

                    local Callback = function(Index, ...)
                        local Button = DoubleButton.Buttons[Index]

                        local CallbackText = CallbackTexts[Index]
                        local PassedCallback = PassedCallbacks[Index]
                        local Name = Names[Index]

                        local ChangeText = typeof(CallbackText) == "string"

                        if ChangeText then
                            Button.Text.Text = CallbackText
                        end

                        Button.Gradient.Color = NewColorSequence(NewRGB(49, 30, 48), NewRGB(187, 92, 194))

                        Delay(0.15, function()
                            if ChangeText then
                                Button.Text.Text = Name
                            end

                            Button.Gradient.Color = NewColorSequence(NewRGB(15, 15, 15), NewRGB(23, 23, 23))
                        end)

                        if typeof(PassedCallback) == "function" then
                            PassedCallback(...)
                        end
                    end


                    -- Renders
                    do
                        local Frame = Menu.Draw("Frame", { Parent = Section.Frame, Position = NewUDim2(0, 5, 0, Section.Offset), Size = NewUDim2(1, -10, 0, 16), BackgroundTransparency = 1, BorderSizePixel = 0})

                        DoubleButton["Frame"] = Frame
                    end


                    -- Buttons
                    do
                        for i = 1, #Names do
                            local Name = Names[i]
                            local Confirm = Confirms[i]
                            local Flag = PFlags[i]


                            local Button = {
                                Confirmable = false
                            }


                            -- Renders
                            do
                                local Outline = Menu.Draw("Frame", {Parent = DoubleButton.Frame, Position = NewUDim2(i == 2 and 0.5 or 0, i == 2 and 2 or 0, 0, 0), Size = NewUDim2(0.5, -2, 0, 16), BackgroundColor3 = Theme.A, BorderSizePixel = 0})

                                local Inline = Menu.Draw("Frame", {Parent = Outline, Position = NewUDim2(0, 1, 0, 1), Size = NewUDim2(1, -2, 1, -2), BackgroundColor3 = Theme.White, BorderSizePixel = 0})

                                local TextButton = Menu.Draw("TextButton", {Parent = Outline, Position = EmptyUDim2, Size = NewUDim2(1, 0, 1, 0), BackgroundTransparency = 1, Text = ""})

                                local Text = Menu.Draw("TextLabel", {Parent = Inline, AnchorPoint = NewVector2(0.5, 0.5), Position = NewUDim2(0.5, 0, 0.5, 0), Text = Name, TextStrokeTransparency = 0})

                                local Gradient = Menu.Draw("UIGradient", {Parent = Inline, Color = NewColorSequence(NewRGB(15, 15, 15), NewRGB(23, 23, 23)), Rotation = -90})

                                Button["Frame"] = Outline
                                Button["Gradient"] = Gradient

                                Button["Button"] = TextButton
                                Button["Text"] = Text
                            end


                            -- Functions
                            do
                                function Button.Set() end
                                function Button.Get() end

                                function Button.Activate()
                                    if Confirm then
                                        if Button.Confirmable then
                                            Callback(i)

                                            Cancel(Button.Task)

                                            Button.Confirmable = false
                                            Button.Text.TextColor3 = NewRGB(205, 205, 205)
                                            Button.Text.Text = Name
                                        else
                                            Button.Task = Spawn(function()
                                                for k = 3.00, 0, -0.1 do
                                                    Button.Text.Text = Format("Confirm? [%.1f]", k)
                                                    Button.Text.TextColor3 = Theme.Accent

                                                    Button.Confirmable = true
                                                    Wait(0.1)
                                                end

                                                Button.Confirmable = false
                                                Button.Text.TextColor3 = NewRGB(205, 205, 205)
                                                Button.Text.Text = Name
                                            end)
                                        end
                                    else
                                        Callback(i)
                                    end
                                end
                            end


                            -- Input & Connections
                            do
                                Connections[#Connections + 1] = Button["Button"].MouseButton1Down:Connect(Button.Activate)

                                Connections[#Connections + 1] = Button["Frame"].MouseEnter:Connect(function()
                                    Menu.Tween(Button.Frame, NewTweenInfo(0.15, Enum.EasingStyle.Linear), { BackgroundColor3 = Theme.Accent })
                                end)

                                Connections[#Connections + 1] = Button["Frame"].MouseLeave:Connect(function()
                                    Menu.Tween(Button.Frame, NewTweenInfo(0.15, Enum.EasingStyle.Linear), { BackgroundColor3 = Theme.A })
                                end)
                            end


                            if Flag then
                                Flags[Flag] = Button
                            end


                            DoubleButton.Buttons[#DoubleButton.Buttons + 1] = Button
                        end
                    end


                    SetMetaTable(DoubleButton, Elements)


                    Section.Offset += 21

                    Section:Update()

                    return DoubleButton.Buttons, DoubleButton
                end

                function Sections:List(Parameters)
                    local Section = self

                    Parameters = Parameters or {}

                    local Options = Parameters.Options or { "Option 1", "Option 2", "Option 3", "Option 4" }
                    local Exclude = typeof(Parameters.Exclude) == "table" and Parameters.Exclude or { Parameters.Exclude }
                    local Callback = Parameters.Callback or EmptyFunction
                    local Flag = Parameters.Flag
                    local Size = Parameters.Size or 302


                    local List = {
                        Section = Section,
                        Values = {}
                    }


                    -- Renders
                    do
                        local Frame = Menu.Draw("ScrollingFrame", { Parent = Section.Frame, Position = NewUDim2(0, 6, 0, Section.Offset), Size = NewUDim2(1, -12, 0, Size), BackgroundTransparency = 0, BackgroundColor3 = Theme.D, BorderSizePixel = 0, ScrollBarThickness = 1, ScrollBarImageColor3 = Theme.Accent, VerticalScrollBarInset = "ScrollBar", MidImage = "rbxassetid://7783554086", TopImage = "rbxassetid://7783554086", BottomImage = "rbxassetid://7783554086", ScrollingEnabled = false, CanvasSize = EmptyUDim2 })

                        local Gradient = Menu.Draw("Frame", { Parent = Section.Frame, Position = NewUDim2(0, 6, 0, Section.Offset + Frame.AbsoluteSize.Y - 15), Size = NewUDim2(1, -13, 0, 15), BackgroundColor3 = NewRGB(15, 15, 15), BorderSizePixel = 0, Visible = false, ZIndex = 25000 })

                        Menu.Draw("UIStroke", { Parent = Frame })
                        Menu.Draw("UIGradient", { Parent = Gradient, Transparency = NewNumberSequence({ NewNumberKeypoint(0, 1, 0), NewNumberKeypoint(1, 0, 0) }), Rotation = 90 })

                        List["Frame"] = Frame
                        List["Gradient"] = Gradient
                    end


                    -- Functions
                    do
                        function List.Get() end
                        function List.Set() end

                        function List.GetValue()
                            return List.Chosen and List.Chosen.Text, List.Chosen
                        end

                        function List.SetValue(Value)
                            if Find(Exclude, Value) then return end

                            if List.Chosen then
                                List.Chosen.TextColor3 = Theme.White
                            end

                            local Found = List.Find(Value)

                            if Found then
                                local Frame = Found[1]

                                List.Chosen = Frame
                                Frame.TextColor3 = Theme.Accent

                                Callback(Frame.Text)
                            end
                        end

                        function List.SetValues(Values)
                            List.Empty()

                            for _, Value in next, Values do
                                List.Add(Value)
                            end
                        end

                        function List.Add(Value)
                            if Find(Exclude, Value) then return end

                            Value = tostring(Value)

                            local Button = Menu.Draw("TextButton", { Parent = List.Frame, Size = NewUDim2(1, 0, 0, 16), Text = "", BackgroundTransparency = 1, BackgroundColor3 = NewRGB(161, 161, 161), BorderSizePixel = 0 })

                            local Label = Menu.Draw("TextLabel", { Parent = Button, AnchorPoint = NewVector2(0.5, 0.5), Position = NewUDim2(0.5, 0, 0.5, 0), Size = NewUDim2(1, 0, 1, 0), Text = Value, BackgroundTransparency = 1, TextXAlignment = "Center", TextStrokeTransparency = 0 })

                            Connections[#Connections + 1] = Button.MouseButton1Down:Connect(function()
                                List.SetValue(Value)
                            end)

                            Connections[#Connections + 1] = Button.MouseEnter:Connect(function()
                                Menu.Tween(Button, NewTweenInfo(0.15, Enum.EasingStyle.Linear), { BackgroundTransparency = 0.95 })
                            end)

                            Connections[#Connections + 1] = Button.MouseLeave:Connect(function()
                                Menu.Tween(Button, NewTweenInfo(0.15, Enum.EasingStyle.Linear), { BackgroundTransparency = 1 })
                            end)

                            List.Values[#List.Values + 1] = {
                                Label,
                                Button
                            }

                            List.Update()
                        end

                        function List.Remove(Value)
                            if Find(Exclude, Value) then return end

                            local Found, Index = List.Find(Value)

                            if Found then
                                Menu.Remove(Found[2])

                                Remove(List.Values, Index)
                            end

                            List.Update()
                        end

                        function List.Empty()
                            local ListValues = List.Values

                            for i = 1, #ListValues do
                                Menu.Remove(ListValues[i][2])
                            end

                            Clear(List.Values)
                            List.Chosen = nil
                        end

                        function List.Update()
                            local ListValues = List.Values
                            local Frame = List.Frame

                            for i = 1, #ListValues do
                                ListValues[i][2].Position = NewUDim2(0, 0, 0, 17 * (i - 1))
                            end

                            local Canvas = 17 * #List.Values
                            local CanUpdate = Canvas >= List.Frame.AbsoluteSize.Y

                            Frame.ScrollingEnabled = CanUpdate
                            Frame.CanvasSize = NewUDim2(0, 0, 0, CanUpdate and Canvas or 0)
                            List.Gradient.Visible = CanUpdate
                        end

                        function List.Find(Value)
                            Value = tostring(Value)

                            local ListValues = List.Values

                            for i = 1, #ListValues do
                                local Found = ListValues[i]

                                if Found[1].Text == Value then
                                    return Found, i
                                end
                            end
                        end
                    end


                    List.SetValues(Options)


                    if Flag then
                        Flags[Flag] = List
                    end


                    Section.Offset += (Size + 6)

                    Section:Update()

                    return List
                end

                function Sections:Label(Parameters)
                    Parameters = Parameters or {}

                    local Section = self

                    local Text = Parameters.Text or "New Label"
                    local Risky = Parameters.Risky or false
                    local Flag = Parameters.Flag
                    local Category = Parameters.Category

                    local Label = {
                        Colorpickers = {},
                        Section = Section
                    }


                    -- Renders
                    do
                        local Frame = Menu.Draw("Frame", { Parent = Section.Frame, Position = NewUDim2(0, 0, 0, Section.Offset), Size = NewUDim2(1, 0, 0, 8), BackgroundTransparency = 1, BorderSizePixel = 0 })

                        local TextLabel = Menu.Draw("TextLabel", { Parent = Section.Frame, Position = NewUDim2(0, 6, 0, Section.Offset), Text = Text, LineHeight = 1.35, TextXAlignment = "Left", TextColor3 = Risky and Theme.Risky or Fonts.Minecraftia.TextColor3, TextStrokeTransparency = 0 })

                        TextLabel.Size = NewUDim2(1, -38, 0, TextLabel.TextBounds.Y)

                        Label["Frame"] = Frame
                        Label["TextLabel"] = TextLabel
                    end


                    -- Functions
                    do
                        function Label.Set() end
                        function Label.Get() end

                        function Label.SetText(String)
                            Label.TextLabel.Text = String
                            Label.TextLabel.Size = NewUDim2(1, -38, 0, Label.TextLabel.TextBounds.Y)
                        end
                    end


                    if Flag then
                        if Category then
                            if typeof(Flags[Category]) == "table" then
                                Flags[Category][Flag] = Label
                            else
                                Flags[Category] = {
                                    [Flag] = Label
                                }
                            end
                        else
                            Flags[Flag] = Label
                        end
                    end

                    SetMetaTable(Label, Elements)


                    Section.Offset += (Label.TextLabel.TextBounds.Y + 4)

                    Section:Update()

                    return Label
                end
            end


            -- Element Functions
            do
                function Elements:Colorpicker(Parameters)
                    Parameters = Parameters or {}

                    local Element = self

                    local Name = Parameters.Name or "Tracer Color"
                    local Color = Parameters.Color or NewRGB(255, 255, 255)
                    local Rainbow = Parameters.Rainbow or false
                    local Transparency = Parameters.Transparency
                    local Callback = Parameters.Callback or EmptyFunction
                    local Flag = Parameters.Flag

                    local H, S, V = ToHSV(Color)
                    local IsTransparency = typeof(Transparency) == "number"


                    local Colorpicker = {
                        Color = Color,
                        Transparency = Transparency,
                        Hue = H,
                        Sat = S,
                        Vib = V,

                        IsRainbow = Rainbow
                    }

                    local Binds = {
                        IsOpen = false
                    }



                    -- Renders
                    do
                        local Frame = Menu.Draw("ImageButton", { Parent = Element.Frame, Position = NewUDim2(1, -28 - (28 * #Element.Colorpickers), 0, 1), Size = NewUDim2(0, 22, 0, 10), Image = Images.Gradient, BackgroundColor3 = Color, BorderSizePixel = 0, ImageColor3 = NewRGB(0, 0, 0)} )

                        Menu.Draw("UIStroke", { Parent = Frame })

                        Colorpicker["Frame"] = Frame
                    end


                    -- Colorpicker Functions
                    do
                        function Colorpicker.Get()
                            return { Colorpicker.Hue, Colorpicker.Sat, Colorpicker.Vib, Colorpicker.Transparency, Colorpicker.IsRainbow }
                        end

                        function Colorpicker.Set(Value)
                            Colorpicker.Hue, Colorpicker.Sat, Colorpicker.Vib, Colorpicker.Transparency, Colorpicker.IsRainbow = Unpack(Value)

                            Colorpicker.Refresh()
                        end

                        function Colorpicker.Refresh()
                            local Frame = Colorpicker.Frame
                            local ValsatFrame = Colorpicker.ValsatFrame
                            local TransparencyFrame = Colorpicker.TransparencyFrame
                            local ColorBox = Colorpicker.ColorBox

                            Colorpicker.Color = FromHSV(Colorpicker.Hue, Colorpicker.Sat, Colorpicker.Vib)
                            Frame.BackgroundColor3 = Colorpicker.Color

                            if ValsatFrame then
                                ValsatFrame.ImageColor3 = FromHSV(Colorpicker.Hue, 1, 1)
                            end

                            if TransparencyFrame then
                                Frame.Transparency = Colorpicker.Transparency

                                Colorpicker.TransparencyGradient.ImageColor3 = Colorpicker.Color

                                ColorBox.BackgroundColor3 = Colorpicker.Color
                                ColorBox.BackgroundTransparency = Colorpicker.Transparency
                            end

                            Callback(Colorpicker.Color, Colorpicker.Transparency)
                        end

                        function Colorpicker.Open()
                            local OutlineSize = NewVector2(166, IsTransparency and 170 or 154)


                            if Colorpicker.IsOpen then
                                Colorpicker.Close()
                                return
                            end

                            if Binds.IsOpen then
                                Binds.Close()
                            end

                            if Window.CurrentColorpicker then
                                Window.CurrentColorpicker.Close()
                            end


                            Colorpicker.IsOpen = true
                            Window.CurrentColorpicker = Colorpicker


                            -- Renders
                            do
                                local AbsolutePosition = Colorpicker.Frame.AbsolutePosition

                                local Outline = Menu.Draw("Frame", {Parent = Menu.Overlay, Position = NewUDim2(0, AbsolutePosition.X, 0, AbsolutePosition.Y + 16), Size = NewUDim2(0, OutlineSize.X, 0, OutlineSize.Y), BackgroundColor3 = Theme.Accent, BorderColor3 = Theme.A, BackgroundTransparency = 1, ZIndex = 55000, Active = true, Draggable = true})

                                local Inline = Menu.Draw("Frame", {Parent = Outline, Position = NewUDim2(0, 1, 0, 1), Size = NewUDim2(1, -2, 1, -2), BackgroundColor3 = Theme.D, BorderSizePixel = 0, BackgroundTransparency = 1, ZIndex = Outline.ZIndex + 1})

                                Menu.Draw("TextLabel", {Parent = Inline, Text = Name, TextStrokeTransparency = 0, Position = NewUDim2(0, 5, 0, 8), TextXAlignment = "Left", BackgroundTransparency = 1, ZIndex = Inline.ZIndex + 1})

                                local Outline2 = Menu.Draw("Frame", {Parent = Inline, Position = NewUDim2(0, 5, 0, 20), Size = NewUDim2(1, -10, 1, -25), BackgroundColor3 = Theme.A, BorderColor3 = Theme.C, BackgroundTransparency = 1, ZIndex = Inline.ZIndex + 1})

                                local Inline2 = Menu.Draw("Frame", {Parent = Outline2, Position = NewUDim2(0, 1, 0, 1), Size = NewUDim2(1, -2, 1, -2), BackgroundColor3 = Theme.B, BorderSizePixel = 0, BackgroundTransparency = 1, ZIndex = Outline2.ZIndex + 1})

                                local ResizeButton = Menu.Draw("TextButton", {Parent = Outline, Position = NewUDim2(1, -15, 1, -15), Size = NewUDim2(0, 15, 0, 15), BackgroundTransparency = 1, Text = "", BorderSizePixel = 0, ZIndex = Outline.ZIndex + 1})

                                Colorpicker["PickerOutline"] = Outline
                                Colorpicker["PickerInline"] = Inline2
                                Colorpicker["ResizeButton"] = ResizeButton
                            end


                            -- Valsat
                            do
                                local ValsatFrame = Menu.Draw("ImageButton", {Parent = Colorpicker.PickerInline, Position = NewUDim2(0, 4, 0, 4), Size = NewUDim2(1, -23, 1, IsTransparency and -23 or -8), BackgroundColor3 = Theme.White, ImageColor3 = FromHSV(H, 1, 1), Image = Images["Colorpicker Valsat 3"], BorderColor3 = Theme.A, ImageTransparency = 0, ZIndex = Colorpicker.PickerInline.ZIndex + 1})

                                local ValsatCursor = Menu.Draw("ImageLabel", {Parent = ValsatFrame, Position = NewUDim2(S, -2, 1 - V, -2), Size = NewUDim2(0, 5, 0, 5), Image = Images["Colorpicker Cursor"], BackgroundTransparency = 1, ImageTransparency = 1, ZIndex = ValsatFrame.ZIndex + 1})

                                Colorpicker["ValsatFrame"] = ValsatFrame
                                Colorpicker["ValsatCursor"] = ValsatCursor
                            end


                            -- Hue
                            do
                                local HueFrame = Menu.Draw("ImageButton", {Parent = Colorpicker.PickerInline, Position = NewUDim2(1, -14, 0, 4), Size = NewUDim2(0, 10, 1, IsTransparency and -23 or -8), BackgroundColor3 = Theme.White, Image = Images["Colorpicker Hue2"], ScaleType = "Crop", BorderColor3 = Theme.A, BackgroundTransparency = 1, ImageTransparency = 1, Rotation = 180, ZIndex = Colorpicker.PickerInline.ZIndex + 1})

                                local HueCursor = Menu.Draw("Frame", {Parent = HueFrame, Position = NewUDim2(0, 0, H, -1), Size = NewUDim2(0, 10, 0, 1), BackgroundTransparency = 1, BackgroundColor3 = Theme.White, BorderColor3 = Theme.A, ZIndex = HueFrame.ZIndex + 1})

                                Menu.Draw("UIStroke", {Parent = HueFrame})
                                Menu.Draw("UIStroke", {Parent = HueCursor})

                                Colorpicker["HueFrame"] = HueFrame
                                Colorpicker["HueCursor"] = HueCursor
                            end


                            -- Transparency & Color Box
                            do
                                if IsTransparency then
                                    local TransparencyFrame = Menu.Draw("ImageButton", {Parent = Colorpicker.PickerInline, Position = NewUDim2(0, 4, 1, -14), Size = NewUDim2(1, -23, 0, 10), Image = Images["Colorpicker Checker 5"], BackgroundTransparency = 1, ImageTransparency = 1, Rotation = 180, ScaleType = "Crop", ZIndex = Colorpicker.PickerInline.ZIndex + 1})

                                    local TransparencyCursor = Menu.Draw("Frame", {Parent = TransparencyFrame, Position = NewUDim2(Transparency, -1, 0, 0), Size = NewUDim2(0, 1, 0, 10), BackgroundTransparency = 1, BackgroundColor3 = Theme.White, ZIndex = TransparencyFrame.ZIndex + 1})

                                    local GradientFrame = Menu.Draw("ImageLabel", {Parent = TransparencyFrame, Position = EmptyUDim2, Size = NewUDim2(1, 0, 1, 0), BackgroundTransparency = 1, ImageColor3 = Color, ZIndex = TransparencyCursor.ZIndex - 1, Image = Images["Colorpicker Overlay 6"]})

                                    local ColorBox = Menu.Draw("Frame", {Parent = Colorpicker.PickerInline, Position = NewUDim2(1, -14, 1, -14), Size = NewUDim2(0, 10, 0, 10), BackgroundColor3 = Color, BorderSizePixel = 0, BackgroundTransparency = 1, ZIndex = Colorpicker.PickerInline.ZIndex + 1})

                                    Menu.Draw("UIStroke", {Parent = ColorBox})
                                    Menu.Draw("UIStroke", {Parent = TransparencyCursor})
                                    Menu.Draw("UIStroke", {Parent = TransparencyFrame})

                                    Colorpicker["TransparencyFrame"] = TransparencyFrame
                                    Colorpicker["TransparencyCursor"] = TransparencyCursor

                                    Colorpicker["TransparencyGradient"] = GradientFrame
                                    Colorpicker["ColorBox"] = ColorBox
                                end
                            end


                            -- Input & Connections
                            do
                                local PickerOutline = Colorpicker["PickerOutline"]

                                local ValsatFrame = Colorpicker["ValsatFrame"]
                                local ValsatCursor = Colorpicker["ValsatCursor"]

                                local HueFrame = Colorpicker["HueFrame"]
                                local HueCursor = Colorpicker["HueCursor"]

                                Connections[#Connections + 1] = ValsatFrame.MouseButton1Down:Connect(function()
                                    while UserInputService:IsMouseButtonPressed(Enum.UserInputType.MouseButton1) do
                                        local MinX = ValsatFrame.AbsolutePosition.X
                                        local MaxX = MinX + ValsatFrame.AbsoluteSize.X

                                        local MinY = ValsatFrame.AbsolutePosition.Y
                                        local MaxY = MinY + ValsatFrame.AbsoluteSize.Y

                                        local MouseX = Clamp(Mouse.X, MinX, MaxX)
                                        local MouseY = Clamp(Mouse.Y, MinY, MaxY)

                                        Colorpicker.Sat = (MouseX - MinX) / (MaxX - MinX)
                                        Colorpicker.Vib = 1 - ((MouseY - MinY) / (MaxY - MinY))

                                        Menu.Tween(ValsatCursor, NewTweenInfo(0.08, Enum.EasingStyle.Linear), { Position = NewUDim2(Colorpicker.Sat, -2, 1 - Colorpicker.Vib, -2) })

                                        Colorpicker.Refresh()

                                        RenderStepped:Wait()
                                    end
                                end)

                                Connections[#Connections + 1] = HueFrame.MouseButton1Down:Connect(function()
                                    while UserInputService:IsMouseButtonPressed(Enum.UserInputType.MouseButton1) do
                                        local MinY = HueFrame.AbsolutePosition.Y
                                        local MaxY = MinY + HueFrame.AbsoluteSize.Y

                                        local MouseY = Clamp(Mouse.Y, MinY, MaxY)

                                        Colorpicker.Hue = 1 - ((MouseY - MinY) / (MaxY - MinY))

                                        Menu.Tween(HueCursor, NewTweenInfo(0.08, Enum.EasingStyle.Linear), { Position = NewUDim2(0, 0, Colorpicker.Hue, -1) })

                                        Colorpicker.Refresh()

                                        RenderStepped:Wait()
                                    end
                                end)

                                Connections[#Connections + 1] = Colorpicker.ResizeButton.MouseButton1Down:Connect(function()
                                    local InitialMouse = NewVector2(Mouse.X, Mouse.Y)
                                    local InitialSize = PickerOutline.Size

                                    while UserInputService:IsMouseButtonPressed(Enum.UserInputType.MouseButton1) or UserInputService:IsMouseButtonPressed(Enum.UserInputType.Touch) do
                                        local Delta = NewVector2(Mouse.X, Mouse.Y) - InitialMouse

                                        Menu.Tween(PickerOutline, NewTweenInfo(0.05, Enum.EasingStyle.Linear), { Size = NewUDim2(0, Clamp(InitialSize.X.Offset + Delta.X, OutlineSize.X - 2, ScreenSize.X), 0, Clamp(InitialSize.Y.Offset + Delta.Y, OutlineSize.Y - 2, ScreenSize.Y)) })

                                        RenderStepped:Wait()
                                    end
                                end)

                                if IsTransparency then
                                    local TransparencyFrame = Colorpicker["TransparencyFrame"]
                                    local TransparencyCursor = Colorpicker["TransparencyCursor"]

                                    Connections[#Connections + 1] = TransparencyFrame.MouseButton1Down:Connect(function()
                                        while UserInputService:IsMouseButtonPressed(Enum.UserInputType.MouseButton1) do
                                            local MinX = TransparencyFrame.AbsolutePosition.X
                                            local MaxX = MinX + TransparencyFrame.AbsoluteSize.X

                                            local MouseX = Clamp(Mouse.X, MinX, MaxX)

                                            Colorpicker.Transparency = 1 - ((MouseX - MinX) / (MaxX - MinX))

                                            Menu.Tween(TransparencyCursor, NewTweenInfo(0.08, Enum.EasingStyle.Linear), { Position = NewUDim2(Colorpicker.Transparency, -1, 0, 0) })

                                            Colorpicker.Refresh()

                                            RenderStepped:Wait()
                                        end
                                    end)
                                end
                            end


                            -- Animations
                            do
                                local Descendants =  Menu.GetDescendants(Colorpicker.PickerOutline)


                                -- Valsat
                                do
                                    Menu.Tween(Colorpicker.ValsatFrame, NewTweenInfo(0.3, Enum.EasingStyle.Linear), { ImageColor3 = FromHSV(Colorpicker.Hue, 1, 1) })

                                    Menu.Tween(Colorpicker.ValsatCursor, NewTweenInfo(0.3, Enum.EasingStyle.Linear), { Position = NewUDim2(Colorpicker.Sat, -2, 1 - Colorpicker.Vib, -2) })
                                end


                                -- Hue
                                do
                                    if not Colorpicker.IsRainbow then
                                        Menu.Tween(Colorpicker.HueCursor, NewTweenInfo(0.3, Enum.EasingStyle.Linear), { Position = NewUDim2(0, 0, Colorpicker.Hue, -1) })
                                    end
                                end


                                -- Transparency & Color Box
                                do
                                    if IsTransparency then
                                        Menu.Tween(Colorpicker.TransparencyGradient, NewTweenInfo(0.3, Enum.EasingStyle.Linear), { ImageColor3 = Colorpicker.Color })

                                        Menu.Tween(Colorpicker.TransparencyCursor, NewTweenInfo(0.3, Enum.EasingStyle.Linear), { Position = NewUDim2(Colorpicker.Transparency, -1, 0, 0) })

                                        Menu.Tween(Colorpicker.ColorBox, NewTweenInfo(0.3, Enum.EasingStyle.Linear), { BackgroundColor3 = Colorpicker.Color })
                                    end
                                end


                                for i = 1, #Descendants  do
                                    local Descendant = Descendants[i]

                                    if
                                        IsA(Descendant, "UIGradient") or
                                        Descendant == Colorpicker.ResizeButton
                                    then
                                        continue
                                    end

                                    local Properties = { BackgroundTransparency = 0 }

                                    if IsA(Descendant, "ImageLabel") or IsA(Descendant, "ImageButton") then
                                        Properties = { ImageTransparency = (IsTransparency and (Descendant == Colorpicker.TransparencyGradient and 0.2)) or 0 }
                                    elseif IsA(Descendant, "TextLabel") then
                                        Properties = { TextTransparency = 0 }
                                    elseif IsA(Descendant, "UIStroke") then
                                        Properties = { Transparency = 0 }
                                    end

                                    if Descendant == Colorpicker.ColorBox then
                                        Properties = { BackgroundTransparency = Colorpicker.Transparency }
                                    end

                                    Menu.Tween(Descendant, NewTweenInfo(0.1, Enum.EasingStyle.Linear), Properties)
                                end
                            end
                        end

                        function Colorpicker.Close()
                            if not Colorpicker.IsOpen then return end

                            Colorpicker.IsOpen = false
                            Window.CurrentColorpicker = nil


                            -- Animations
                            do
                                local Descendants =  Menu.GetDescendants(Colorpicker.PickerOutline)


                                -- Valsat
                                do
                                    Colorpicker.ValsatFrame.BackgroundTransparency = 1

                                    Menu.Tween(Colorpicker.ValsatFrame, NewTweenInfo(0.1, Enum.EasingStyle.Linear), { ImageColor3 = FromHSV(H, 1, 1) })

                                    Menu.Tween(Colorpicker.ValsatCursor, NewTweenInfo(0.1, Enum.EasingStyle.Linear), { Position = NewUDim2(S, -2, 1 - V, -2) })
                                end


                                -- Hue
                                do
                                    if not Colorpicker.IsRainbow then
                                        Menu.Tween(Colorpicker.HueCursor, NewTweenInfo(0.1, Enum.EasingStyle.Linear), { Position = NewUDim2(0, 1, H, -1) })
                                    end
                                end


                                -- Transparency & Color Box
                                do
                                    if IsTransparency then
                                        Menu.Tween(Colorpicker.TransparencyGradient, NewTweenInfo(0.1, Enum.EasingStyle.Linear), { BackgroundColor3 = Color })

                                        Menu.Tween(Colorpicker.TransparencyCursor, NewTweenInfo(0.1, Enum.EasingStyle.Linear), { Position = NewUDim2(Transparency, -1, 0, 1) })

                                        Menu.Tween(Colorpicker.ColorBox, NewTweenInfo(0.1, Enum.EasingStyle.Linear), { BackgroundColor3 = Color, BackgroundTransparency = Transparency })
                                    end
                                end


                                for i = 1, #Descendants do
                                    local Descendant = Descendants[i]

                                    if IsA(Descendant, "UIGradient") then
                                        continue
                                    end

                                    local Properties = { BackgroundTransparency = 1 }

                                    if IsA(Descendant, "ImageLabel") or IsA(Descendant, "ImageButton") then
                                        Properties = { ImageTransparency = 1 }
                                    elseif IsA(Descendant, "TextLabel") then
                                        Properties = { TextTransparency = 1 }
                                    elseif IsA(Descendant, "UIStroke") then
                                        Properties = { Transparency = 1 }
                                    end

                                    Menu.Tween(Descendant, NewTweenInfo(0.1, Enum.EasingStyle.Linear), Properties)
                                end
                            end


                            Delay(0.1, function()
                                Menu.Remove(Colorpicker.PickerOutline)
                            end)
                        end
                    end


                    -- Binds Functions
                    do
                        function Binds.Open()
                            if Binds.IsOpen then
                                Binds.Close()
                                return
                            end

                            if Colorpicker.IsOpen then
                                Colorpicker.Close()
                            end


                            Window.CloseContent()
                            Window.CurrentContent = Binds

                            Binds.IsOpen = true


                            -- Renders
                            do
                                local AbsolutePosition = Colorpicker.Frame.AbsolutePosition

                                local Frame = Menu.Draw("Frame", {Parent = Menu.Overlay, Position = NewUDim2(0, AbsolutePosition.X, 0, AbsolutePosition.Y + 18), Size = NewUDim2(0, 72, 0, 54), BackgroundColor3 = Theme.D, BorderColor3 = Theme.Accent, BackgroundTransparency = 1, ZIndex = 55000})

                                local Inline = Menu.Draw("Frame", {Parent = Frame, Position = NewUDim2(0, 0, 0, 3), Size = NewUDim2(1, 0, 1, -3), BackgroundTransparency = 1, ZIndex = Frame.ZIndex + 1})

                                local ResetButton = Menu.Draw("TextButton", {Parent = Inline, Text = "Reset", Size = NewUDim2(1, 0, 0, 11), BorderSizePixel = 0, BackgroundTransparency = 1, TextTransparency = 1, TextStrokeTransparency = 0, ZIndex = Inline.ZIndex + 1})

                                local CopyButton = Menu.Draw("TextButton", {Parent = Inline, Text = "Copy", Size = NewUDim2(1, 0, 0, 11), BorderSizePixel = 0, BackgroundTransparency = 1, TextTransparency = 1, TextStrokeTransparency = 0, ZIndex = Inline.ZIndex + 1})

                                local PasteButton = Menu.Draw("TextButton", {Parent = Inline, Text = "Paste", Size = NewUDim2(1, 0, 0, 11), BorderSizePixel = 0, BackgroundTransparency = 1, TextStrokeTransparency = 0, TextTransparency = 1, ZIndex = Inline.ZIndex + 1})

                                local RainbowButton = Menu.Draw("TextButton", {Parent = Inline, Text = "Rainbow", Size = NewUDim2(1, 0, 0, 11), BorderSizePixel = 0, BackgroundTransparency = 1, TextStrokeTransparency = 0, TextTransparency = 1, ZIndex = Inline.ZIndex + 1})

                                Menu.Draw("UIListLayout", { Parent = Inline, Padding = EmptyUDim, FillDirection = "Vertical", VerticalFlex = "SpaceAround", HorizontalAlignment = "Center" })

                                Binds["Frame"] = Frame
                                Binds["Inline"] = Inline

                                Binds["Reset"] = ResetButton
                                Binds["Copy"] = CopyButton
                                Binds["Paste"] = PasteButton
                                Binds["Rainbow"] = RainbowButton
                            end


                            -- Input & Connections
                            do
                                local Frame = Colorpicker["Frame"]
                                local Outline = Binds["Frame"]

                                local ResetButton = Binds["Reset"]
                                local CopyButton = Binds["Copy"]
                                local PasteButton = Binds["Paste"]
                                local RainbowButton = Binds["Rainbow"]

                                local Connection = Frame:GetPropertyChangedSignal("AbsolutePosition"):Connect(function()
                                    local AbsolutePosition = Frame.AbsolutePosition
                                    local AbsoluteY = AbsolutePosition.Y

                                    Outline.Position = NewUDim2(0, AbsolutePosition.X, 0, AbsoluteY + 18)

                                    if AbsoluteY < Element.Frame.Parent.AbsolutePosition.Y then
                                        Binds.Close()
                                    end
                                end)

                                Connections[#Connections + 1] = Connection

                                Binds.Connection = Connection

                                Connections[#Connections + 1] = ResetButton.MouseButton1Down:Connect(function()
                                    Colorpicker.Hue, Colorpicker.Sat, Colorpicker.Vib, Colorpicker.Transparency = H, S, V, Transparency

                                    Colorpicker.Refresh()

                                    ResetButton.TextColor3 = Theme.Accent

                                    Delay(0.35, function()
                                        ResetButton.TextColor3 = Theme.White
                                    end)
                                end)

                                Connections[#Connections + 1] = CopyButton.MouseButton1Down:Connect(function()
                                    local Copied = Colorpicker.Get()

                                    Window.CopiedColor = Copied

                                    CopyButton.TextColor3 = Theme.Accent

                                    local RGB = FromHSV(Copied[1], Copied[2], Copied[3])

                                    SetClipBoard(Format("%s, %s, %s, %s", tostring(RGB.R * 255), tostring(RGB.G * 255), tostring(RGB.B * 255), IsTransparency and tostring(Copied[4]) or "0"))

                                    Delay(0.35, function()
                                        CopyButton.TextColor3 = Theme.White
                                    end)
                                end)

                                Connections[#Connections + 1] = PasteButton.MouseButton1Down:Connect(function()
                                    if not Window.CopiedColor then return end

                                    Colorpicker.Hue, Colorpicker.Sat, Colorpicker.Vib, Colorpicker.Transparency = Unpack(Window.CopiedColor)

                                    Colorpicker.Refresh()

                                    PasteButton.TextColor3 = Theme.Accent

                                    Delay(0.35, function()
                                        PasteButton.TextColor3 = Theme.White
                                    end)
                                end)

                                Connections[#Connections + 1] = RainbowButton.MouseButton1Down:Connect(function()
                                    Colorpicker.IsRainbow = not Colorpicker.IsRainbow

                                    RainbowButton.TextColor3 = Theme.Accent

                                    Delay(0.35, function()
                                        RainbowButton.TextColor3 = Theme.White
                                    end)
                                end)
                            end


                            -- Animations
                            do
                                local Descendants = Menu.GetDescendants(Binds.Frame)

                                for i = 1, #Descendants do
                                    local Descendant = Descendants[i]

                                    if
                                        IsA(Descendant, "UIListLayout") or
                                        Descendant == Binds.Inline
                                    then
                                        continue
                                    end

                                    local Properties = { BackgroundTransparency = 0 }

                                    if IsA(Descendant, "TextLabel") or IsA(Descendant, "TextButton") then
                                        Properties = { TextTransparency = 0 }
                                    elseif IsA(Descendant, "UIStroke") then
                                        Properties = { Transparency = 0 }
                                    end

                                    Menu.Tween(Descendant, NewTweenInfo(0.1, Enum.EasingStyle.Linear), Properties)
                                end
                            end
                        end

                        function Binds.Close()
                            if not Binds.IsOpen then return end


                            Window.CurrentContent = nil
                            Binds.IsOpen = false


                            if Binds.Connection then
                                Binds.Connection:Disconnect()
                                Binds.Connection = nil
                            end


                            -- Animations
                            do
                                local Descendants = Menu.GetDescendants(Binds.Frame)

                                for i = 1, #Descendants do
                                    local Descendant = Descendants[i]

                                    if IsA(Descendant, "UIListLayout") then
                                        continue
                                    end

                                    local Properties = { BackgroundTransparency = 1 }

                                    if IsA(Descendant, "TextLabel") or IsA(Descendant, "TextButton") then
                                        Properties = { TextTransparency = 1 }
                                    elseif IsA(Descendant, "UIStroke") then
                                        Properties = { Transparency = 1 }
                                    end

                                    Menu.Tween(Descendant, NewTweenInfo(0.1, Enum.EasingStyle.Linear), Properties)
                                end
                            end


                            Delay(0.1, function()
                                Menu.Remove(Binds.Frame)
                            end)
                        end
                    end


                    -- Input & Connections
                    do
                        Connections[#Connections + 1] = Colorpicker["Frame"].MouseButton1Down:Connect(Colorpicker.Open)
                        Connections[#Connections + 1] = Colorpicker["Frame"].MouseButton2Down:Connect(Binds.Open)

                        Connections[#Connections + 1] = RenderStepped:Connect(function()
                            if not Colorpicker.IsRainbow then return end

                            local HueCursor = Colorpicker.HueCursor

                            Colorpicker.Hue = (Sin(Tick() * 1.4) + 1) / 2

                            if HueCursor then
                                HueCursor.Position = NewUDim2(0, 0, Colorpicker.Hue, -1)
                            end

                            Colorpicker.Refresh()
                        end)
                    end


                    if Flag then
                        Flags[Flag] = Colorpicker
                    end

                    Colorpicker.Binds = Binds

                    Element.Colorpickers[#Element.Colorpickers + 1] = Colorpicker

                    return Element, Colorpicker
                end

                function Elements:Keybind(Parameters)
                    Parameters = Parameters or {}

                    local Element = self

                    local Default = Parameters.Default or "..."
                    local Mode = Parameters.Mode or "Toggle"
                    local Modes = Parameters.Modes or { "Always", "Toggle", "On Hold", "Off Hold" }
                    local Activated = Parameters.Activated or EmptyFunction
                    local Callback = Parameters.Callback or EmptyFunction
                    local Flag = Parameters.Flag


                    local Keybind = {
                        Modes = Modes,
                        Mode = Mode,

                        Active = Mode == "Always" or Mode == "Off Hold",
                        IsOpen = false,

                        Value = {},
                        ModeButtons = {},
                        Update = {},

                        Name = Parameters.Name or Flag or "Keybind",
                        Exclude = Parameters.Exclude and true or false
                    }


                    -- Renders
                    do
                        local Frame = Menu.Draw("ImageButton", { Parent = Element.Frame, Position = NewUDim2(1, -28 - (28 * #Element.Colorpickers), 0, 1), Size = NewUDim2(0, 22, 0, 10), Image = Images.Gradient, BackgroundColor3 = NewRGB(22, 22, 22), BorderSizePixel = 0, ImageColor3 = NewRGB(0, 0, 0)} )

                        local Button = Menu.Draw("TextButton", { Parent = Frame, Position = NewUDim2(0, 0, 0, 3), Size = NewUDim2(1, 0, 1, 0), Text = "[...]", BackgroundTransparency = 1, TextStrokeTransparency = 0, TextTruncate = "AtEnd" })

                        Menu.Draw("UIStroke", { Parent = Frame })

                        Keybind["Frame"] = Frame
                        Keybind["Button"] = Button
                    end


                    -- Functions
                    do
                        function Keybind.Updated(...)
                            local KeybindUpdate = Keybind.Update

                            for i = 1, #KeybindUpdate do
                                KeybindUpdate[i](...)
                            end
                        end

                        function Keybind.Set(Table)
                            Keybind.Active = Table[1]
                            Keybind.Value = Table[2]

                            Keybind["Button"].Text = Format("[%s]", #Keybind.Value > 0 and Keybind.Shorten(Keybind.Value[2]) or "...")

                            Callback(Keybind.Value, Keybind.Active)

                            Keybind.Updated()
                        end

                        function Keybind.Get()
                            return { Keybind.Active, Keybind.Value }
                        end

                        function Keybind.Shorten(String)
                            for Index, Value in next, Menu.InputShorts do
                                String = Gsub(String, Index, Value)
                            end

                            return String
                        end

                        function Keybind.SetKeyFromInput(Input)
                            if Input.EnumType and (Input.EnumType == Enum.KeyCode or Input.EnumType == Enum.UserInputType) then
                                local InputName = Input.Name

                                if Find(Menu.KeyCodes, InputName) or Find(Menu.InputTypes, InputName) then
                                    Keybind.Value = { Input.EnumType == Enum.KeyCode and "KeyCode" or "UserInputType", InputName }
                                    Keybind["Button"].Text = Format("[%s]", #Keybind.Value > 0 and Keybind.Shorten(Keybind.Value[2]) or "-")

                                    if Keybind.SelectConnection then
                                        Keybind.SelectConnection:Disconnect()
                                    end

                                    Callback(Keybind.Value, Keybind.Active)

                                    Keybind.Updated()

                                    return true
                                elseif InputName == "Backspace" or InputName == "Escape" then
                                    Keybind.Value = {}
                                    Keybind["Button"].Text = "[...]"

                                    if Keybind.SelectConnection then
                                        Keybind.SelectConnection:Disconnect()
                                    end

                                    Element.Set(false)
                                    Keybind.Active = false

                                    Callback(Keybind.Value, Keybind.Active)

                                    Keybind.Updated()

                                    return true
                                end
                            end

                            return false
                        end

                        function Keybind.SetPickable(Boolean)
                            Keybind.IsSelecting = Boolean
                            Keybind["Button"].TextColor3 = Boolean and Theme["Accent"] or NewRGB(205, 205, 205)

                            if Boolean then
                                Keybind.Close()

                                Delay(0.1, function()
                                    Keybind.SelectConnection = UserInputService.InputBegan:Connect(function(Input)
                                        local Selected = Keybind.SetKeyFromInput(Input.KeyCode.Name ~= "Unknown" and Input.KeyCode or Input.UserInputType)

                                        if Selected then
                                            Keybind.SetPickable(false)
                                        end
                                    end)

                                    Connections[#Connections + 1] = Keybind.SelectConnection
                                end)
                            else
                                Keybind.SelectConnection:Disconnect()
                                Keybind.SelectConnection = nil
                            end
                        end

                        function Keybind.Open()
                            if Keybind.IsOpen or Keybind.SelectConnection then
                                Keybind.Close()
                                return
                            end

                            Window.CloseContent()
                            Window.CurrentContent = Keybind

                            Keybind.IsOpen = true


                            -- Renders
                            do
                                local AbsolutePosition = Keybind.Frame.AbsolutePosition

                                local Outline = Menu.Draw("Frame", { Parent = Menu.Overlay, Position = NewUDim2(0, AbsolutePosition.X, 0, AbsolutePosition.Y + 16), Size = NewUDim2(0, 72, 0, #Keybind.Modes * 15), BackgroundColor3 = Theme.D, BorderColor3 = Theme.Accent, BackgroundTransparency = 1 })

                                local Inline = Menu.Draw("Frame", { Parent = Outline, Position = NewUDim2(0, 0, 0, 3), Size = NewUDim2(1, 0, 1, -3), BackgroundTransparency = 1, BorderSizePixel = 0 })

                                Menu.Draw("UIListLayout", { Parent = Inline, FillDirection = "Vertical", VerticalFlex = "SpaceAround", ItemLineAlignment = "Center" })

                                Keybind["PickerFrame"] = Outline
                                Keybind["PickerInline"] = Inline
                            end


                            -- Input & Connections
                            do
                                local Frame = Keybind["Frame"]
                                local Outline = Keybind["PickerFrame"]

                                local Connection = Frame:GetPropertyChangedSignal("AbsolutePosition"):Connect(function()
                                    local AbsolutePosition = Frame.AbsolutePosition
                                    local AbsoluteY = AbsolutePosition.Y

                                    Outline.Position = NewUDim2(0, AbsolutePosition.X, 0, AbsoluteY + 16)

                                    if AbsoluteY < Element.Frame.Parent.AbsolutePosition.Y then
                                        Keybind.Close()
                                    end
                                end)

                                Connections[#Connections + 1] = Connection

                                Keybind.Connection = Connection
                            end


                            -- Modes
                            do
                                for i = 1, #Keybind.Modes do
                                    local KeyMode = Keybind.Modes[i]

                                    local ModeButton = Menu.Draw("TextButton", { Parent = Keybind.PickerInline, Size = NewUDim2(1, 0, 0, 15), TextColor3 = KeyMode == Keybind.Mode and Theme.Accent or Theme.White, BackgroundTransparency = 1, BorderSizePixel = 0, Text = KeyMode, TextTransparency = 1, TextStrokeTransparency = 0 })


                                    -- Input & Connections
                                    do
                                        Connections[#Connections + 1] = ModeButton.MouseButton1Down:Connect(function()
                                            local NewActive = false

                                            Keybind.Mode = ModeButton.Text
                                            ModeButton.TextColor3 = Theme.Accent

                                            if Keybind.Mode == "Always" or Keybind.Mode == "Off Hold" then
                                                NewActive = true
                                            end

                                            Keybind.Active = NewActive
                                            Element.Set(NewActive)

                                            Keybind.Updated()

                                            for k = 1, #Keybind.ModeButtons do
                                                local Button = Keybind.ModeButtons[k]

                                                if Button == ModeButton then
                                                    continue
                                                end

                                                Button.TextColor3 = Theme.White
                                            end
                                        end)
                                    end


                                    Keybind.ModeButtons[i] = ModeButton
                                end
                            end


                            -- Animations
                            do
                                local Descendants = Menu.GetDescendants(Keybind.PickerFrame)

                                for i = 1, #Descendants do
                                    local Descendant = Descendants[i]

                                    if
                                        IsA(Descendant, "UIListLayout") or
                                        Descendant == Keybind.PickerInline
                                    then
                                        continue
                                    end

                                    local Properties = { BackgroundTransparency = 0 }

                                    if IsA(Descendant, "TextButton") then
                                        if Descendant == Keybind.PickerFrame then
                                            Properties["TextTransparency"] = 0
                                        else
                                            Properties = { TextTransparency = 0 }
                                        end
                                    elseif IsA(Descendant, "UIStroke") then
                                        Properties = { Transparency = 0 }
                                    end

                                    Menu.Tween(Descendant, NewTweenInfo(0.1, Enum.EasingStyle.Linear), Properties)
                                end
                            end
                        end

                        function Keybind.Close()
                            if not Keybind.IsOpen then return end

                            Window.CurrentContent = nil
                            Keybind.IsOpen = false


                            if Keybind.Connection then
                                Keybind.Connection:Disconnect()
                                Keybind.Connection = nil
                            end


                            -- Animations
                            do
                                local Descendants = Menu.GetDescendants(Keybind.PickerFrame)

                                for i = 1, #Descendants do
                                    local Descendant = Descendants[i]

                                    if IsA(Descendant, "UIListLayout") then
                                        continue
                                    end

                                    local Properties = { BackgroundTransparency = 1 }

                                    if IsA(Descendant, "TextButton") then
                                        Properties["TextTransparency"] = 1
                                    elseif IsA(Descendant, "UIStroke") then
                                        Properties = { Transparency = 1 }
                                    end

                                    Menu.Tween(Descendant, NewTweenInfo(0.1, Enum.EasingStyle.Linear), Properties)
                                end
                            end


                            Delay(0.1, function()
                                Menu.Remove(Keybind.PickerFrame)
                            end)
                        end
                    end


                    -- Input & Connections
                    do
                        Connections[#Connections + 1] = Keybind["Button"].MouseButton1Down:Connect(function()
                            Keybind.SetPickable(not Keybind.IsSelecting)
                        end)

                        Connections[#Connections + 1] = Keybind["Button"].MouseButton2Down:Connect(Keybind.Open)

                        Connections[#Connections + 1] = UserInputService.InputBegan:Connect(function(Input, GPE)
                            if GPE then return end

                            local Value = Keybind.Value

                            if not Keybind.IsSelecting and Value[1] and Value[2] then
                                if Input.KeyCode == Enum[Value[1]][Value[2]] or Input.UserInputType == Enum[Value[1]][Value[2]] then
                                    if Keybind.Mode == "Always" then return end

                                    local NewActive = true

                                    if Keybind.Mode == "Toggle" then
                                        NewActive = not Element.Value
                                    elseif Keybind.Mode == "Off Hold" then
                                        NewActive = false
                                    end

                                    Keybind.Active = NewActive
                                    Element.Set(NewActive)

                                    if NewActive then
                                        Activated()
                                    end

                                    Keybind.Updated()
                                end
                            end
                        end)

                        Connections[#Connections + 1] = UserInputService.InputEnded:Connect(function(Input, GPE)
                            if GPE then return end

                            local Value = Keybind.Value

                            if not Keybind.IsSelecting and Value[1] and Value[2] then
                                if Input.KeyCode == Enum[Value[1]][Value[2]] or Input.UserInputType == Enum[Value[1]][Value[2]] then
                                    if Keybind.Mode == "Toggle" or Keybind.Mode == "Always" then return end

                                    local NewActive = false

                                    if Keybind.Mode == "Off Hold" then
                                        NewActive = true
                                    end

                                    Keybind.Active = NewActive
                                    Element.Set(NewActive)

                                    if NewActive then
                                        Activated()
                                    end

                                    Keybind.Updated()
                                end
                            end
                        end)
                    end


                    if Flag then
                        Flags[Flag] = Keybind
                    end

                    Keybind.SetKeyFromInput(Default)
                    Element.Set(Mode == "Always" or Mode == "Off Hold")

                    Element.Bind = Keybind

                    Menu.Keybinds[#Menu.Keybinds + 1] = Keybind

                    return Keybind
                end
            end


            -- Input & Connections
            do
                local MainFrame = Window["Main Frame"]

                Connections[#Connections + 1] = UserInputService.InputBegan:Connect(function(Input)
                    if UserInputService:GetFocusedTextBox() then return end

                    if Input.KeyCode == Window.Key or Input.UserInputType == Window.Key then
                        Window.Fade(not Window.IsVisible)
                    end
                end)

                Connections[#Connections + 1] = Window["Resize Button"].MouseButton1Down:Connect(function()
                    local InitialMouse = NewVector2(Mouse.X, Mouse.Y)
                    local InitialSize = MainFrame.Size

                    while UserInputService:IsMouseButtonPressed(Enum.UserInputType.MouseButton1) or UserInputService:IsMouseButtonPressed(Enum.UserInputType.Touch) do
                        local Delta = NewVector2(Mouse.X, Mouse.Y) - InitialMouse

                        Menu.Tween(MainFrame, NewTweenInfo(0.07, Enum.EasingStyle.Linear), { Size = NewUDim2(0, Clamp(InitialSize.X.Offset + Delta.X, WindowSize.X, ScreenSize.X), 0, Clamp(InitialSize.Y.Offset + Delta.Y, WindowSize.Y, ScreenSize.Y)) })

                        RenderStepped:Wait()
                    end
                end)
            end


            -- Fading
            do
                Window.Fade(false)
                Window["Main Frame"].Visible = false

                Delay(0.25, function()
                    Window.Fade(true)
                end)
            end


            Menu.Window = Window

            return Window
        end

        function Menu.CreateWatermark(Parameters)
            Parameters = Parameters or {}

            local Text = Parameters.Text or "deadcell"
            local Visible = Parameters.Enabled or false
            local Position = Menu.Window and NewUDim2(0, Menu.Window["Main Frame"].AbsolutePosition.X + 1, 0, Menu.Window["Main Frame"].AbsolutePosition.Y - 22) or NewUDim2(0, 50, 0, 0)


            local Watermark = {
                Cache = {},
                IsFading = false,
                IsVisible = false
            }


            -- Renders
            do
                local Outline = Menu.Draw("Frame", {Parent = Menu.Overlay2, BackgroundColor3 = NewRGB(35, 35, 35), Position = Position, BorderColor3 = Theme.A, Visible = Visible, Active = true, Draggable = true})

                local Inline = Menu.Draw("Frame", {Parent = Outline, BackgroundColor3 = Theme.White, Size = NewUDim2(1, -2, 1, -2), Position = NewUDim2(0, 1, 0, 1), BorderSizePixel = 0})

                Menu.Draw("Frame", {Parent = Inline, Position = EmptyUDim2, Size = NewUDim2(1, 0, 0, 1), BackgroundColor3 = Theme.Accent, BorderSizePixel = 0})

                Menu.Draw("UIGradient", {Parent = Inline, Color = NewColorSequence(NewRGB(2, 2, 2), NewRGB(19, 19, 19)), Rotation = -90})

                local Label = Menu.Draw("TextLabel", {Parent = Inline, AnchorPoint = NewVector2(0.5, 0.5), Position = NewUDim2(0.5, 0, 0.5, 3), Text = "", RichText = true, TextStrokeTransparency = 0})

                Watermark["Frame"] = Outline
                Watermark["Text"] = Label
            end


            -- Functions
            do
                function Watermark.Fade(NewVisible)
                    if Watermark.IsFading then
                        return
                    end

                    Watermark.IsFading = true

                    Watermark["Frame"].Visible = true

                    local Descendants = Menu.GetDescendants(Watermark.Frame)

                    for i = 1, #Descendants do
                        local Descendant = Descendants[i]

                        local Cache = Watermark.Cache[Descendant] or {}
                        local TweenProps = {}
                        local Properties = {}

                        if IsA(Descendant, "TextLabel") or IsA(Descendant, "TextBox") or IsA(Descendant, "TextButton") then
                            Properties[#Properties + 1] = "TextTransparency"
                            Properties[#Properties + 1] = "BackgroundTransparency"
                        elseif IsA(Descendant, "ImageLabel") or IsA(Descendant, "ImageButton") then
                            Properties[#Properties + 1] = "BackgroundTransparency"
                            Properties[#Properties + 1] = "ImageTransparency"
                        elseif IsA(Descendant, "Frame") or IsA(Descendant, "ScrollingFrame") then
                            Properties[#Properties + 1] = "BackgroundTransparency"
                        elseif IsA(Descendant, "UIStroke") then
                            Properties[#Properties + 1] = "Transparency"
                        end

                        for _, Prop in next, Properties do
                            Cache[Prop] = Cache[Prop] or Descendant[Prop]
                        end

                        for _, Prop in next, Properties do
                            if Cache[Prop] ~= 1 then
                                TweenProps[Prop] = NewVisible and Cache[Prop] or 1
                            end
                        end

                        if next(TweenProps) then
                            Menu.Tween(Descendant, NewTweenInfo(0.25, Enum.EasingStyle.Linear), TweenProps)
                        end

                        Watermark.Cache[Descendant] = Cache
                    end

                    if NewVisible then
                        Clear(Watermark.Cache)
                    end

                    Delay(0.25, function()
                        Watermark["Frame"].Visible = NewVisible

                        Watermark.IsFading = false
                        Watermark.IsVisible = NewVisible
                    end)
                end

                function Watermark.Set(NewText)
                    local TextBounds = Menu.GetTextBounds(NewText, Fonts.Minecraftia)

                    Watermark["Frame"].Size = NewUDim2(0, TextBounds.X + 15, 0, 20)
                    Watermark["Text"].Text = NewText
                end
            end


            Watermark.Set(Text)


            -- Fading
            do
                if Visible then
                    Watermark.Fade(false)
                    Watermark.Frame.Visible = false

                    Delay(0.25, function()
                        Watermark.Fade(true)
                    end)
                end
            end


            Menu.Watermark = Watermark

            return Watermark
        end

        function Menu.CreateKeybindsList(Parameters)
            Parameters = Parameters or {}

            local Visible = Parameters.Enabled or false


            local KeybindsList = {
                Cache = {},

                IsFading = false,
                IsVisible = false,

                Keybinds = {}
            }


            -- Renders
            do
                local Outline = Menu.Draw("Frame", {Parent = Menu.Overlay2, BackgroundColor3 = NewRGB(35, 35, 35), Size = NewUDim2(0, 118, 0, 33), Position = NewUDim2(0, 20, 0.5, 20), AnchorPoint = NewVector2(0, 0.5), BorderColor3 = Theme.A, Visible = Visible, Active = true, Draggable = true})

                local Inline = Menu.Draw("Frame", {Parent = Outline, BackgroundColor3 = Theme.White, Size = NewUDim2(1, -2, 1, -2), Position = NewUDim2(0, 1, 0, 1), BorderSizePixel = 0})

                local Background = Menu.Draw("Frame", {Parent = Inline, Size = NewUDim2(1, -5, 1, -24), Position = NewUDim2(0, 5, 0, 24), BackgroundTransparency = 1})

                Menu.Draw("Frame", {Parent = Inline, Position = EmptyUDim2, Size = NewUDim2(1, 0, 0, 1), BackgroundColor3 = Theme.Accent, BorderSizePixel = 0})

                Menu.Draw("UIGradient", {Parent = Inline, Color = NewColorSequence(NewRGB(2, 2, 2), NewRGB(19, 19, 19)), Rotation = -90})

                Menu.Draw("UIListLayout", { Parent = Background, Padding = NewUDim(0, 12), FillDirection = "Vertical", HorizontalAlignment = "Left", VerticalAlignment = "Top" })

                local Label = Menu.Draw("TextLabel", {Parent = Outline, Position = NewUDim2(0, 6, 0, 11), Text = "Keybinds", TextXAlignment = "Left", TextStrokeTransparency = 0})

                KeybindsList["Frame"] = Outline
                KeybindsList["Background"] = Background
                KeybindsList["Text"] = Label
            end


            -- Functions
            do
                function KeybindsList.Fade(NewVisible)
                    if KeybindsList.IsFading then
                        return
                    end

                    KeybindsList.IsFading = true

                    KeybindsList["Frame"].Visible = true

                    local Descendants = Menu.GetDescendants(KeybindsList.Frame)

                    for i = 1, #Descendants do
                        local Descendant = Descendants[i]

                        local Cache = KeybindsList.Cache[Descendant] or {}
                        local TweenProps = {}
                        local Properties = {}

                        if IsA(Descendant, "TextLabel") or IsA(Descendant, "TextBox") or IsA(Descendant, "TextButton") then
                            Properties[#Properties + 1] = "TextTransparency"
                            Properties[#Properties + 1] = "BackgroundTransparency"
                        elseif IsA(Descendant, "ImageLabel") or IsA(Descendant, "ImageButton") then
                            Properties[#Properties + 1] = "BackgroundTransparency"
                            Properties[#Properties + 1] = "ImageTransparency"
                        elseif IsA(Descendant, "Frame") or IsA(Descendant, "ScrollingFrame") then
                            Properties[#Properties + 1] = "BackgroundTransparency"
                        elseif IsA(Descendant, "UIStroke") then
                            Properties[#Properties + 1] = "Transparency"
                        end

                        for _, Prop in next, Properties do
                            Cache[Prop] = Cache[Prop] or Descendant[Prop]
                        end

                        for _, Prop in next, Properties do
                            if Cache[Prop] ~= 1 then
                                TweenProps[Prop] = NewVisible and Cache[Prop] or 1
                            end
                        end

                        if next(TweenProps) then
                            Menu.Tween(Descendant, NewTweenInfo(0.25, Enum.EasingStyle.Linear), TweenProps)
                        end

                        KeybindsList.Cache[Descendant] = Cache
                    end

                    if NewVisible then
                        Clear(KeybindsList.Cache)
                    end

                    Delay(0.25, function()
                        KeybindsList["Frame"].Visible = NewVisible

                        KeybindsList.IsFading = false
                        KeybindsList.IsVisible = NewVisible
                    end)
                end

                function KeybindsList.Add(Keybind)
                    local Text = Format("%s: %s (%s)", Format("[%s]", #Keybind.Value > 0 and Keybind.Shorten(Keybind.Value[2]) or "..."), Keybind.Name, Keybind.Mode)
                    local TextBounds = Menu.GetTextBounds(Text, Fonts.Minecraftia)

                    local Label = Menu.Draw("TextLabel", {Parent = KeybindsList.Background, Text = Text, BackgroundTransparency = 1, BorderSizePixel = 0, TextStrokeTransparency = 0, TextXAlignment = "Left", TextColor3 = Keybind.Active and Theme.Accent or Fonts.Minecraftia.TextColor3})

                    local Amount = 1

                    for _, Value in next, KeybindsList.Keybinds do
                        Amount += 1
                    end

                    KeybindsList.Frame.Size = NewUDim2(0, TextBounds.X + 45, 0, 33 + (8 * Amount))

                    Keybind.Update[#Keybind.Update + 1] = function()
                        Label.TextColor3 = Keybind.Active and Theme.Accent or Fonts.Minecraftia.TextColor3 or Color3.fromRGB(209, 99, 203)
                        Label.Text = Format("%s: %s (%s)", Format("[%s]", #Keybind.Value > 0 and Keybind.Shorten(Keybind.Value[2]) or "..."), Keybind.Name, Keybind.Mode)
                    end

                    KeybindsList.Keybinds[Keybind] = Label
                end

                function KeybindsList.Remove(Keybind)
                    if not Keybind then return end

                    local Frame = KeybindsList.Frame
                    local Keybinds = KeybindsList.Keybinds

                    local Amount = -1

                    for _, Value in next, Keybinds do
                        Amount += 1
                    end

                    Frame.Size = NewUDim2(0, Frame.Size.X.Offset, 0, 33 + (8 * Amount))

                    Menu.Remove(Keybinds[Keybind])

                    KeybindsList.Keybinds[Keybind] = nil
                end
            end


            -- Keybinds
            do
                local Keybinds = Menu.Keybinds

                for i = 1, #Keybinds do
                    local Keybind = Keybinds[i]

                    if Keybind.Exclude then continue end

                    KeybindsList.Add(Keybind)
                end
            end


            -- Fading
            do
                if Visible then
                    KeybindsList.Fade(false)
                    KeybindsList.Frame.Visible = false

                    Delay(0.25, function()
                        KeybindsList.Fade(true)
                    end)
                end
            end


            Menu.KeybindsList = KeybindsList

            return KeybindsList
        end
    end
end